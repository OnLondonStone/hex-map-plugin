{"version":3,"file":"view.js","mappings":"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","sources":["webpack://hex-map-block/./src/modules/economy.js","webpack://hex-map-block/./src/modules/economyConstants.js","webpack://hex-map-block/./src/modules/makemap.js","webpack://hex-map-block/./src/modules/mapCode.js","webpack://hex-map-block/./src/modules/pathfinding.js","webpack://hex-map-block/./src/modules/simulation.js","webpack://hex-map-block/./src/modules/system.js","webpack://hex-map-block/./src/modules/systemConstants.js","webpack://hex-map-block/./src/modules/tradeRoutes.js","webpack://hex-map-block/./src/modules/utilities.js","webpack://hex-map-block/webpack/bootstrap","webpack://hex-map-block/webpack/runtime/define property getters","webpack://hex-map-block/webpack/runtime/hasOwnProperty shorthand","webpack://hex-map-block/webpack/runtime/make namespace object","webpack://hex-map-block/./src/view.js"],"sourcesContent":["import {TRADECODES, TRADEGOODS, BASICTRADEGOODS} from \"./economyConstants.js\"\r\nimport { TradeRoute } from \"./tradeRoutes.js\";\r\nimport { getSectorData, getSystem } from \"./utilities.js\";\r\nimport { uniformCostSearchSystems } from \"./pathfinding.js\";\r\n\r\nexport class Economy{\r\n    constructor(hexKey, techLevel, government, popRoll, tradeCodes){\r\n        this.techLevel = techLevel;\r\n        this.govtTier = government;\r\n        this.tradeCodes = tradeCodes;\r\n        this.popRoll = popRoll;\r\n        this.tradeCapacity = this.setTradeCapacity(this.tradeCodes, this.popRoll);\r\n        this.tradeInfo = this.setTradeInfo(this.popRoll, this.tradeCodes, BASICTRADEGOODS);\r\n        this.tradeBalance = 0;\r\n        this.tradeRange = this.setTradeRange(this.techLevel, this.tradeCodes);\r\n        this.tradeRoutes = new Map();\r\n    }\r\n\r\n    setTradeCapacity(tradeCodes, pop){\r\n        let tradeMultiplier;\r\n        let tradeCapacity;\r\n\r\n        if (tradeCodes.includes(\"Ba\")){ tradeMultiplier = 0 }\r\n        if (tradeCodes.includes(\"Lo\")){ tradeMultiplier = 1 }\r\n        if (tradeCodes.includes(\"Ni\")){ tradeMultiplier = 2 }\r\n        if (tradeCodes.includes(\"Ph\")){ tradeMultiplier = 4 }\r\n        if (tradeCodes.includes(\"Hi\")){ tradeMultiplier = 8 }\r\n\r\n        tradeCapacity = tradeMultiplier * pop;\r\n        return tradeCapacity;\r\n    }\r\n    //Poss check for duplicated values\r\n    setTradeInfo(pop, tradeCodes){\r\n        let supplyArray = [];\r\n        let demandArray = [];\r\n\r\n        let tradeInfo = {}\r\n        tradeCodes.forEach(code =>{\r\n            let codeArray = [code];\r\n\r\n            supplyArray.push(...this.setSupply(pop, codeArray));\r\n            demandArray.push(...this.setDemand(pop, codeArray));\r\n        })\r\n\r\n        tradeInfo.supply = supplyArray;\r\n        tradeInfo.demand = demandArray;\r\n\r\n        tradeInfo = this.setInitialPricing(tradeInfo);\r\n\r\n        return tradeInfo;\r\n    }\r\n    setSystemModifiers(tradeCodes){\r\n        let modifiers = [];\r\n\r\n        tradeCodes.forEach(code => {modifiers.push(TRADECODES[code].modifiers)})\r\n\r\n        return modifiers;\r\n    }\r\n    //Not working -?\r\n    setSupply(pop, tradeCodes){\r\n        let supplies = []\r\n        let supplyArray = [];\r\n\r\n        tradeCodes.forEach(code => {\r\n            let codeConst = TRADECODES[code];\r\n            let newGoods = codeConst.tradeGoods.supply;\r\n            supplies.push(...newGoods);\r\n   \r\n        supplies.forEach(good => {\r\n            let tradeGood = this.getGoodsDetails(good);\r\n            let supplyAmount;\r\n            if (codeConst.modifier.supplyEffect.includes(tradeGood.goodsClass)){\r\n                supplyAmount = 10 * codeConst.modifier.strength * (pop * pop)}\r\n            else{ supplyAmount = 1 * (pop * pop)}\r\n            tradeGood.supplyAmount = supplyAmount;\r\n            supplyArray.push({id : tradeGood.id, good : tradeGood.goodsName, basePrice : tradeGood.basePrice, supplyAmount : tradeGood.supplyAmount, foundDemand : 0});\r\n\r\n        })\r\n    })  \r\n        return supplyArray;\r\n    }\r\n    //Not working -?\r\n    setDemand(pop, tradeCodes){\r\n        let demands = [];\r\n        let demandsArray = [];\r\n\r\n        tradeCodes.forEach(code => {\r\n            let codeConst = TRADECODES[code];\r\n            let newGoods = codeConst.tradeGoods.demand;\r\n            demands.push(...newGoods);    \r\n\r\n        demands.forEach(good => {\r\n            let tradeGood = this.getGoodsDetails(good);\r\n            let demandAmount;\r\n            if (codeConst.modifier.demandEffect.includes(tradeGood.goodsClass)){\r\n                demandAmount = 10 * codeConst.modifier.strength * (pop * pop)}\r\n            else{ demandAmount = 1 * (pop * pop)}\r\n            tradeGood.demandAmount = demandAmount;\r\n            demandsArray.push({id : tradeGood.id, good : tradeGood.goodsName, basePrice : tradeGood.basePrice, demandAmount : tradeGood.demandAmount, foundSupply : 0});\r\n        })\r\n    })\r\n    return demandsArray\r\n    }\r\n    getGoodsDetails(goodID){\r\n        let selectedGood = TRADEGOODS.find(({ id }) => id === goodID);\r\n        return selectedGood;\r\n    }\r\n    setInitialPricing(tradeInfo){\r\n        let updatedSupply = this.updateSupply(tradeInfo.supply);\r\n        let updatedDemand = this.updateDemand(tradeInfo.demand);\r\n\r\n        tradeInfo.supply = updatedSupply;\r\n        tradeInfo.demand = updatedDemand;\r\n\r\n        return tradeInfo;\r\n    }\r\n\r\n    updateSupply(supply){\r\n        supply.forEach((good) =>{\r\n            good.price = good.basePrice;\r\n            //good.price = good.price.toPrecision(4);\r\n        })\r\n        return supply;\r\n    }\r\n    updateDemand(demand){\r\n        demand.forEach((good) =>{\r\n            good.price = good.basePrice;\r\n            //good.price = good.price.toPrecision(4);\r\n        });\r\n       return demand;\r\n    }\r\n    setTradeRange(tech, tradeCodes){\r\n        let tradeRange = 1;\r\n        \r\n        if( tech == 11){ tradeRange = 2 };\r\n        if( tech == 12){ tradeRange = 3 };\r\n        if( tech == 13){ tradeRange = 4 };\r\n        if( tech == 14){ tradeRange = 5 };\r\n        if( tech >= 15){ tradeRange = 6 };\r\n\r\n        if (tradeCodes.includes(\"Ba\")){ tradeRange = 0 };\r\n\r\n        return tradeRange;\r\n    }\r\n    findTradePartners(startKey, tradeRange){\r\n        let tradePartnersList = uniformCostSearchSystems(startKey, tradeRange);\r\n        //Returns an array of hexKeys\r\n        return tradePartnersList;\r\n    }\r\n    //This is a map, called from runSimulation, hexKey is origin\r\n    setTradeRoutes(startKey, tradePartnersList){\r\n        const tradeRange = this.tradeRange;\r\n        tradePartnersList.forEach((hexKey) =>{\r\n            let hex = getSystem(hexKey);\r\n            if(hex.system){\r\n            let tradeRoute = new TradeRoute(startKey, hexKey, tradeRange)\r\n            this.tradeRoutes.set(hexKey, tradeRoute)}\r\n            console.log(this.tradeRoutes);\r\n        });\r\n    }\r\n}","//Change TradeCodes to array?\r\n//Supply Demand Rework\r\n//Supply\r\n//In - 7-8, 9-F\r\n//Ag - 4, 8 - 5-7\r\nexport const TRADECODES = { \r\n    \"Template\" : { \r\n        codeName : \"Name\",\r\n        //Poss replace with supplies and demands\r\n        tradeGoods : {supply : [], demand : []},\r\n        modifier : {strength : 1, supplyEffect : [], demandEffect : []},\r\n        codeClass : \"\"\r\n    },\r\n    \"As\" : { \r\n        codeName : \"Asteroid Belt\",\r\n        tradeGoods : {supply : [31, 42, 44, 45, 53], demand : [15, 21, 22, 25, 32]},\r\n        modifier : {strength : 2, supplyEffect : [\"Mining\"], demandEffect : []},\r\n        codeClass : \"Planetary\"\r\n    },\r\n    \"De\" : { \r\n        codeName : \"Desert\",\r\n        tradeGoods : {supply : [31, 41, 42, 44, 45, 51, 54], demand : []},\r\n        modifier : {strength : 1, supplyEffect : [\"Resource\", \"Mining\"], demandEffect : []},\r\n        codeClass : \"Planetary\"\r\n    },\r\n    \"Fl\" : { \r\n        codeName : \"Fluid Oceans\",\r\n        tradeGoods : {supply : [41, 44], demand : [15]},\r\n        modifier : {strength : 0.5, supplyEffect : [\"Resource\"], demandEffect : []},\r\n        codeClass : \"Planetary\"\r\n    },\r\n    \"Ga\" : { \r\n        codeName : \"Garden\",\r\n        tradeGoods : {supply : [33, 34, 51, 55], demand : []},\r\n        modifier : {strength : 2, supplyEffect : [\"Resource\"], demandEffect : []},\r\n        codeClass : \"Planetary\"\r\n    },\r\n    \"He\" : { \r\n        codeName : \"Hell-World\",\r\n        tradeGoods : {supply : [], demand : []},\r\n        modifier : {strength : 1, supplyEffect : [], demandEffect : []},\r\n        codeClass : \"Planetary\",\r\n    },\r\n    \"Ic\" : { \r\n        codeName : \"Ice-Capped\",\r\n        tradeGoods : {supply : [31, 41, 44, 53], demand : [15, 32]},\r\n        modifier : {strength : 1, supplyEffect : [\"Resource\"], demandEffect : []},\r\n        codeClass : \"Planetary\"\r\n    },\r\n    \"Oc\" : { \r\n        codeName : \"Ocean World\",\r\n        tradeGoods : {supply : [26, 35, 41, 42, 51, 54], demand : []},   \r\n        modifier : {strength : 0.5, supplyEffect : [\"Resource\"], demandEffect : []},\r\n        codeClass : \"Planetary\"\r\n    },\r\n    \"Va\" : { \r\n        codeName : \"Vacuum\",\r\n        tradeGoods : {supply : [], demand : []},\r\n        modifier : {strength : 1, supplyEffect : [], demandEffect : []},\r\n        codeClass : \"Planetary\"\r\n    },\r\n    \"Wa\" : { \r\n        codeName : \"Water World\",\r\n        tradeGoods : {supply : [26, 35, 41, 42, 51, 54], demand : []},\r\n        modifier : {strength : 1, supplyEffect : [\"Resource\"], demandEffect : []},\r\n        codeClass : \"Planetary\"\r\n    },\r\n    \"Di\" : { \r\n        codeName : \"Die-Back\",\r\n        tradeGoods : {supply : [], demand : []},\r\n        modifier : {strength : 1, supplyEffect : [], demandEffect : []},\r\n        codeClass : \"Population\"\r\n    },\r\n    \"Ba\" : { \r\n        codeName : \"Barren\",\r\n        tradeGoods : {supply : [], demand : []},\r\n        modifier : {strength : 1, supplyEffect : [], demandEffect : []},\r\n        codeClass : \"Population\"\r\n    },\r\n    \"Lo\" : { \r\n        codeName : \"Low Population\",\r\n        tradeGoods : {supply : [11, 12, 13, 14, 15, 16, 45], demand : [33]},\r\n        modifier : {strength : 1, supplyEffect : [], demandEffect : []},\r\n        codeClass : \"Population\",\r\n    },\r\n    \"Ni\" : { \r\n        codeName : \"Non-Industrial\",\r\n        tradeGoods : {supply : [11, 12, 13, 14, 15, 16, 52], demand : [11, 12, 16, 21, 22, 43, 53, 56]},\r\n        modifier : {strength : 1, supplyEffect : [], demandEffect : [\"Consumables\", \"Industrial\"]},\r\n        codeClass : \"Population\"\r\n    },\r\n    \"Ph\" : { \r\n        codeName : \"Pre-High Population\",\r\n        tradeGoods : {supply : [11, 12, 13, 14, 15, 16, 35, 36, 42], demand : [13, 15, 23, 34, 51, 52, 56]},\r\n        modifier : {strength : 0.5, supplyEffect : [], demandEffect : [\"Consumables\", \"Industrial\"]},\r\n        codeClass : \"Population\"\r\n    },\r\n    \"Hi\" : { \r\n        codeName : \"High Population\",\r\n        tradeGoods : {supply : [11, 12, 13, 14, 15, 16, 35, 36, 42], demand : [13, 15, 23, 34, 51, 52, 56]},\r\n        modifier : {strength : 1, supplyEffect : [], demandEffect : [\"Consumables\", \"Industrial\"]},\r\n        codeClass : \"Population\"\r\n    },\r\n    \"Pa\" : { \r\n        codeName : \"Pre-Agricultural\",\r\n        tradeGoods : {supply : [26, 33, 34, 52, 54, 55], demand : [12, 41, 46]},\r\n        modifier : {strength : 0.5, supplyEffect : [\"Organic\"], demandEffect : [\"Industrial\"]},\r\n        codeClass : \"Output\"\r\n    },\r\n    \"Ag\" : { \r\n        codeName : \"Agricultural\",\r\n        tradeGoods : {supply : [26, 33, 34, 52, 54, 55], demand : [12, 41, 46]},\r\n        modifier : {strength : 1, supplyEffect : [\"Organic\"], demandEffect : [\"Industrial\"]},\r\n        codeClass : \"Output\"\r\n    },\r\n    \"Na\" : { \r\n        codeName : \"Non-Agricultural\",\r\n        tradeGoods : {supply : [], demand : [52]},\r\n        modifier : {strength : 1, supplyEffect : [], demandEffect : [\"Consumables\"]},\r\n        codeClass : \"Economic\"\r\n    },\r\n    \"Pi\" : { \r\n        codeName : \"Pre-Industrial\",\r\n        tradeGoods : {supply : [21, 22, 23, 24, 25, 43, 46, 56], demand : [14, 16, 26, 31, 36, 44, 45, 53, 54]},\r\n        modifier : {strength : 0.5, supplyEffect : [\"Industrial\"], demandEffect : [\"Resource\", \"Mining\"]},\r\n        codeClass : \"Output\"\r\n    },\r\n    \"In\" : { \r\n        codeName : \"Industrial\",\r\n        tradeGoods : {supply : [21, 22, 23, 24, 25, 43, 46, 56], demand : [14, 16, 26, 31, 36, 44, 45, 53, 54]},\r\n        modifier : {strength : 1, supplyEffect : [\"Industrial\"], demandEffect : [\"Resource\", \"Mining\"]},\r\n        codeClass : \"Output\"\r\n    },\r\n    \"Po\" : { \r\n        codeName : \"Poor\",\r\n        tradeGoods : {supply : [11], demand : [11, 14, 24, 36, 51]},\r\n        modifier : {strength : 1, supplyEffect : [], demandEffect : []},\r\n        codeClass : \"Economic\"\r\n    },\r\n    \"Pr\" : { \r\n        codeName : \"Pre-Rich\",\r\n        tradeGoods : {supply : [], demand : [21, 23, 25, 31, 32, 35, 36, 42, 43, 44, 51, 55]},\r\n        modifier : {strength : 1, supplyEffect : [], demandEffect : []},\r\n        codeClass : \"Economic\"\r\n    },\r\n    \"Ri\" : { \r\n        codeName : \"Rich\",\r\n        tradeGoods : {supply : [], demand : [21, 23, 25, 31, 32, 35, 36, 42, 43, 44, 51, 55]},\r\n        modifier : {strength : 1, supplyEffect : [], demandEffect : []},\r\n        codeClass : \"Economic\"\r\n    }\r\n}\r\n//Supply Output = Pop * *(0.5 if poor, 2 if Rich, 1.5 if Pre-Rich)\r\n//Demand = \r\n// Classes = Basic/Advanced Industrial, Basic/Advanced Resource, Basic/Advanced Organic, Luxury, Basic/Advanced Comsumables\r\n\r\nexport const TRADEGOODS = [\r\n    {id : 11, goodsName : \"Basic Electronics\",              goodsClass : \"Industrial\",   basePrice : 10},\r\n    {id : 12, goodsName : \"Basic Machine Parts\",            goodsClass : \"Industrial\",   basePrice : 10},\r\n    {id : 13, goodsName : \"Basic Manufactured Goods\",       goodsClass : \"Industrial\",   basePrice : 10},\r\n    {id : 14, goodsName : \"Basic Raw Materials\",            goodsClass : \"Resource\",     basePrice : 5}, \r\n    {id : 15, goodsName : \"Basic Consumables\",              goodsClass : \"Comsumables\",      basePrice : 2},\r\n    {id : 16, goodsName : \"Basic Ore\",                      goodsClass : \"Mining\",              basePrice : 1},\r\n\r\n    {id : 21, goodsName : \"Advanced Electronics\",           goodsClass : \"Industrial\",   basePrice : 100},\r\n    {id : 22, goodsName : \"Advanced Machine Parts\",         goodsClass : \"Industrial\",   basePrice : 75},\r\n    {id : 23, goodsName : \"Advanced Manufactured Goods\",    goodsClass : \"Industrial\",   basePrice : 100},\r\n    {id : 24, goodsName : \"Advanced Weapons\",               goodsClass : \"Industrial\",   basePrice : 150},\r\n    {id : 25, goodsName : \"Advanced Vehicles\",              goodsClass : \"Industrial\",   basePrice : 180},\r\n\r\n    {id : 26, goodsName : \"Biochemicals\",                   goodsClass : \"Resource\",      basePrice : 50},\r\n    {id : 31, goodsName : \"Crystals and Gems\",              goodsClass : \"Mining\",     basePrice : 20},\r\n    {id : 32, goodsName : \"Cybernetics\",                    goodsClass : \"Industial\",   basePrice : 250},\r\n    {id : 33, goodsName : \"Live Animals\",                   goodsClass : \"Resource\",     basePrice : 10},\r\n    {id : 34, goodsName : \"Luxury Consumables\",             goodsClass : \"Consumables\",      basePrice : 20},\r\n    {id : 35, goodsName : \"Luxury Goods\",                   goodsClass : \"Industrial\",   basePrice : 200},\r\n    {id : 36, goodsName : \"Medical Supplies\",               goodsClass : \"Industrial\",   basePrice : 50},\r\n    {id : 41, goodsName : \"Petrochemicals\",                 goodsClass : \"Resource\",     basePrice : 10},\r\n    {id : 42, goodsName : \"Pharmaceuticals\",                goodsClass : \"Industrial\",   basePrice : 100},\r\n    {id : 43, goodsName : \"Polymers\",                       goodsClass : \"Resource\",     basePrice : 7},\r\n    {id : 44, goodsName : \"Precious Metals\",                goodsClass : \"Resource\",     basePrice : 50},\r\n    {id : 45, goodsName : \"Radioactives\",                   goodsClass : \"Resource\",     basePrice : 1000},\r\n    {id : 46, goodsName : \"Robots\",                         goodsClass : \"Industrial\",   basePrice : 400},\r\n    {id : 51, goodsName : \"Spices\",                         goodsClass : \"Comsumables\",      basePrice : 6},\r\n    {id : 52, goodsName : \"Textiles\",                       goodsClass : \"Industrial\",   basePrice : 3},\r\n    {id : 53, goodsName : \"Uncommon Ore\",                   goodsClass : \"Mining\",     basePrice : 5},\r\n    {id : 54, goodsName : \"Uncommon Raw Materials\",         goodsClass : \"Resource\",     basePrice : 20},\r\n    {id : 55, goodsName : \"Wood\",                           goodsClass : \"Resource\",      basePrice : 1},\r\n    {id : 56, goodsName : \"Vehicles\",                       goodsClass : \"Industrial\",   basePrice : 15}\r\n    ];\r\n//Currently not being used - fold into \r\nexport const BASICTRADEGOODS = [11, 12, 13, 14, 15, 16];","import { openTab, generateInfoBox, generateTradeBox, rollDice, direction_differences, DOMIdToHexKeyMap, HexKeyToDOMIdMap, scrollParentToChild } from \"./utilities.js\";\r\nimport { System } from \"./system.js\";\r\n//TRY AND REPLACE ALL USES OF map with SECTOR if Map\r\n\r\nexport class Sector{\r\n    constructor(col, row, scale){\r\n        this.col = col;\r\n        this.row = row;\r\n        this.scale = scale;\r\n        this.TradeMap = new Map();\r\n        this.systemList = [];\r\n\r\n        this.SectorMap = this.makeSectorMap(this.col, this.row, this.scale, this.systemList);\r\n    }\r\n\r\n    //Creates \r\n    makeSectorMap(col, row, scale, systemList){\r\n        const SectorMap = new Map();\r\n        let hexContainer = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n        hexContainer.setAttribute(\"id\", \"hex-container\");\r\n        hexContainer.id = \"hex-container\";\r\n        document.getElementById(\"svg-container\").appendChild(hexContainer);\r\n        //Fix width;\r\n        let margin = 3;\r\n        let r = scale\r\n        let svgHeight = ((row + 0.5) * ((Math.sqrt(3) * r))) + (margin*2);\r\n        let svgWidth = ((col + 0.5) * (3/2 * r) + (margin*2));\r\n        document.getElementById(\"hex-container\").setAttribute(\"height\", `${Math.floor(svgHeight)}`);\r\n        document.getElementById(\"hex-container\").setAttribute(\"width\", `${Math.floor(svgWidth)}`);\r\n        \r\n        //Switching order of hex and trade group makes each clickable - implement toggle?\r\n\r\n        let hexGroup = document.createElementNS(\"http://www.w3.org/2000/svg\",\"g\");\r\n        hexGroup.setAttribute(\"id\", \"hex-group\");\r\n        hexContainer.appendChild(hexGroup);\r\n\r\n        let tradeGroup = document.createElementNS(\"http://www.w3.org/2000/svg\",\"g\");\r\n        tradeGroup.setAttribute(\"id\", \"trade-group\");\r\n        hexContainer.appendChild(tradeGroup);\r\n\r\n        for(let c = 0; c < col; c++){\r\n            let colNum = c + 1;\r\n            for (let r = 0; r < row; r++){\r\n                let rowNum = r + 1;\r\n                let hex = new Hex(colNum, rowNum, scale);\r\n                SectorMap.set(hex.hexKey, hex);\r\n\r\n                if(hex.system){\r\n                    let tableRow = {hex : hex.id, name : hex.system.tableData.Name, uwp: hex.system.tableData.UWP};\r\n                    DOMIdToHexKeyMap.set(`Row: ${hex.id}`, hex.hexKey);\r\n                    HexKeyToDOMIdMap.set(hex.hexKey, `Row: ${hex.id}`);\r\n                    systemList.push([hex.hexKey, tableRow]);\r\n                }\r\n            }\r\n        }\r\n    SectorMap.forEach((hex)=>{hex.edges = hex.setEdges(hex.colNum, hex.rowNum, hex.hexKey, SectorMap, col, row)});\r\n    return SectorMap;\r\n    }\r\n}\r\n\r\n//Bring up to standard - half done\r\nexport class Hex {\r\n    constructor(col, row, hexSize){\r\n        //Hexes are 0 index\r\n        this.colNum = col - 1;\r\n        this.rowNum = row - 1;\r\n        this.hexKey = [this.colNum, this.rowNum];\r\n        this.hexSize = hexSize;\r\n        this.centerPoint = this.hexCenter(col, row, hexSize);\r\n        this.edges;\r\n        this.id = `${this.colNum},${this.rowNum}`;\r\n        this.system = this.setSystem(this.id, this.centerPoint);\r\n        this.moveCost = this.setMoveCost(this.system);\r\n        this.hexDOM = this.createHex(this.id, this.centerPoint, this.hexSize, this.hexKey);\r\n    }    \r\n    //Returns center point of given col and row values\r\n    hexCenter(col, row, hexSize){\r\n        let margin = 3;\r\n        let x = col * (3/2 * hexSize) - (hexSize/2) + margin;\r\n        let y = row * (Math.sqrt(3) * hexSize) - (Math.sqrt(3) * hexSize / 2) + margin;\r\n        //2nd Column offset\r\n        if (!(col%2)){y += (Math.sqrt(3)/2 * hexSize)}\r\n        return {\"x\":x, \"y\":y};\r\n    }\r\n    //Creates hex element\r\n    createHex(id, centerpoint, hexSize, hexKey){\r\n        let newHex = document.createElementNS(\"http://www.w3.org/2000/svg\", \"polygon\");\r\n        let newHexGroup = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\r\n\r\n        newHex.setAttribute(\"points\", this.hexPoints(centerpoint, hexSize));\r\n        newHex.setAttribute(\"id\",`${id}`);\r\n        newHexGroup.setAttribute(\"class\",\"hex\");\r\n\r\n        //Adds onclick event\r\n        newHexGroup.setAttribute(\"class\",\"hex-group\");\r\n        newHexGroup.addEventListener(\"click\", ()=>{this.hexOnClick(this);});\r\n\r\n        //Adds hover\r\n        newHexGroup.onmouseover = function(){\r\n            let rowId = HexKeyToDOMIdMap.get(hexKey);\r\n            let container = document.getElementById(\"content-container\");\r\n            let relatedTableEntry = document.getElementById(rowId);\r\n            if(relatedTableEntry != null){\r\n                scrollParentToChild(container, relatedTableEntry);\r\n                let rowCells = relatedTableEntry.childNodes;\r\n                rowCells.forEach(function(cell){cell.setAttribute(\"class\", \"allSystemsCellHover\")});\r\n            }\r\n        }\r\n        newHexGroup.onmouseout = function(){\r\n            let rowId = HexKeyToDOMIdMap.get(hexKey);\r\n            let table = document.getElementById(\"all-systems-table\");\r\n            let relatedTableEntry = document.getElementById(rowId);\r\n            if(relatedTableEntry != null){\r\n                let rowCells = relatedTableEntry.childNodes;\r\n                rowCells.forEach(function(cell){cell.setAttribute(\"class\", \"allSystemsCell\")});}\r\n        }\r\n\r\n\r\n        \r\n        //Adds the new hex element to container\r\n        newHexGroup.appendChild(newHex);\r\n        document.getElementById(\"hex-group\").appendChild(newHexGroup);\r\n\r\n        if(this.system){\r\n            this.setMarker(centerpoint, newHexGroup);\r\n        }\r\n        return newHex;\r\n    }   \r\n    setSystem(id, centerPoint){\r\n        if(rollDice(1)>3){return new System(id, centerPoint)}\r\n        else{return null};\r\n    } \r\n    hexOnClick(hex){\r\n        let info = document.getElementById(\"system-information-content\");\r\n        let trade = document.getElementById(\"system-trade-content\");\r\n        let currentTab = document.getElementsByClassName(\"tab-links active\");\r\n        let currentTabID = currentTab[0].id;\r\n        //Bad - case switch?\r\n        if(currentTabID === \"all-systems\"){currentTab = {target : {id : \"system-information\"}}};\r\n        if(currentTabID === \"system-information\"){currentTab = {target : {id : \"system-information\"}}};\r\n        if(currentTabID === \"system-trade\"){currentTab = {target : {id : \"system-trade\"}}};\r\n\r\n        if(hex.system){\r\n            if(info.hasChildNodes()){info.innerHTML = \"\";}\r\n            if(trade.hasChildNodes()){trade.innerHTML = \"\";}\r\n            generateInfoBox(hex.system.tableData)\r\n            if(hex.system.economicData){generateTradeBox(hex.system.economicData)}\r\n            openTab(currentTab, hex);\r\n        }\r\n    \r\n        document.querySelectorAll(\".clicked-hex\").forEach((hex)=> hex.setAttribute(\"class\", \"hex\"));\r\n        document.getElementById(hex.id).setAttribute(\"class\",\"clicked-hex\");\r\n    }    \r\n    //Gets from hexCenter(), creates points for hex polygon\r\n    hexPoints(centerpoint, hexSize){\r\n        this.hexCenter();\r\n        let x = centerpoint.x;\r\n        let y = centerpoint.y;\r\n        let points = ``;\r\n\r\n        //Create Points list\r\n        for(let i = 0; i<6; i++){\r\n            const angleDeg = 60 * i;\r\n            const angleRad = Math.PI/180 * angleDeg;\r\n            let xPoint = hexSize * Math.cos(angleRad);\r\n            let yPoint = hexSize * Math.sin(angleRad);\r\n            //Above gives pixel coordinates at a 0,0 point.\r\n            //Now to translate that to correct location.\r\n            xPoint += x;\r\n            yPoint += y;\r\n            points += `${Math.floor(xPoint)}, ${Math.floor(yPoint)} `;\r\n        }\r\n        return points;\r\n    }\r\n    setMarker(centerpoint, newHex){\r\n        //Useful code for creating a dot at the middle of a hex.\r\n        let cx = centerpoint.x;\r\n        let cy = centerpoint.y;\r\n\r\n        let mark = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\r\n        mark.setAttribute(\"cx\", cx);\r\n        mark.setAttribute(\"cy\", cy);\r\n        mark.setAttribute(\"r\", 10);\r\n        mark.setAttribute(\"id\", \"marker\");\r\n        newHex.appendChild(mark);\r\n    }\r\n    setMoveCost(system){\r\n        let cost = 1;\r\n        if(!system){cost = 3};\r\n        return cost;\r\n    }\r\n    setEdges(col, row, hexKey, SectorMap, colMax, rowMax){\r\n        let edges = [];\r\n        let parity = col & 1;\r\n        let dif = direction_differences[parity]; \r\n        dif.forEach((direction) => {\r\n            let edgeCol = col + direction[0];\r\n            let edgeRow = row + direction[1];\r\n            if(edgeCol >= 0 && edgeCol <= colMax && edgeRow >= 0 && edgeRow <= rowMax){\r\n                //Have to find each edge's key from col and row. I guess it saves having to do it each time by saving it to the hex object?\r\n                SectorMap.forEach((hex, key)=>{if(hex.colNum == edgeCol && hex.rowNum == edgeRow){\r\n                    edges.push({key : key, cost : hex.moveCost})}})\r\n            }})\r\n        return edges;\r\n    }\r\n}","import { Sector } from \"./makemap.js\";\r\nimport { openTab, allSystemsTable } from \"./utilities.js\";\r\n//Data structure:\r\n//document.getElementById(\"hex-container\").sectorDataContainer.sector.SectorMap.get([hexKey]);\r\n\r\n\r\nexport function generateMap(e){\r\n    let dataContainer;\r\n    let gen = e.target.parentElement;\r\n    //Uses default values:\r\n    let col = gen.col.value;\r\n    let row = gen.row.value;\r\n    let scale = gen.scale.value;\r\n    //Gets user input col and row values or uses default:\r\n    if(!col){col = 8;}\r\n    if(!row){row = 10}\r\n    if(!scale){scale = 40}\r\n    if(document.querySelectorAll(\"#hex-container\").length === 0){\r\n        dataContainer = new Sector(col, row, scale);\r\n    }\r\n    //Creates Tab Display\r\n    document.getElementById(\"tab-display\").style.display = \"block\";\r\n    let tab = document.getElementsByClassName(\"tab-links\");\r\n    for(let t = 0; t < tab.length; t++){\r\n        tab[t].style.display = \"block\";\r\n        tab[t].addEventListener('click', openTab)\r\n    }\r\n    let tabLinks = document.getElementsByClassName(\"tab-links\");\r\n    for (let i = 0; i < tabLinks.length; i++) {\r\n      tabLinks[i].className = tabLinks[i].className.replace(\" active\", \"\");\r\n    }\r\n    document.getElementById(\"all-systems\").className += \" active\";\r\n    allSystemsTable(dataContainer.systemList);\r\n\r\n    document.getElementById(\"content-container\").style.height=`${document.getElementById(\"svg-container\").offsetHeight}px`;\r\n\r\n    document.getElementById(\"run-button\").style.display = \"block\";\r\n\r\n    document.getElementById(\"reset-button\").style.display = \"block\";\r\n\r\n    //Hides Map Generator div\r\n    document.getElementById(\"map-generator\").style.display = \"none\";\r\n    document.getElementById(\"hex-container\").sectorDataContainer = dataContainer;\r\n}\r\n\r\n//Resets map\r\nexport function resetMap(){\r\n    //fix CSS on generator section\r\n    document.getElementById(\"map-generator\").style.display = \"inline-flex\";\r\n    document.getElementById(\"run-button\").style.display = \"none\";\r\n    document.getElementById(\"reset-button\").style.display = \"none\";\r\n\r\n    if(document.getElementById(\"system-information-content\") !== null){\r\n        let systemContent = document.getElementById(\"system-information-content\");\r\n        let oldSystem = systemContent.firstElementChild;\r\n        let allContent = document.getElementById(\"all-systems-content\");    \r\n        let oldAll = allContent.firstElementChild;\r\n\r\n        if (oldSystem !== null) systemContent.removeChild(oldSystem);\r\n        if (oldAll !== null) allContent.removeChild(oldAll);\r\n    }\r\n\r\n    if(document.querySelectorAll(\"#hex-container\").length > 0){\r\n        let mapContainer = document.getElementById(\"svg-container\");\r\n        let map = document.getElementById(\"hex-container\");\r\n        mapContainer.removeChild(map);\r\n    }\r\n\r\n    document.getElementById(\"tab-display\").style.display = \"none\";\r\n\r\n    let tabLinks = document.getElementsByClassName(\"tab-links\");\r\n    for(let t = 0; t < tabLinks.length; t++){\r\n        tabLinks[t].style.display = \"none\";\r\n    }\r\n}","import { getSectorData } from \"./utilities\";\r\n//Needs updating\r\n//https://www.geeksforgeeks.org/implementation-priority-queue-javascript/\r\nexport class PriorityQueue {\r\n  constructor() {\r\n      this.heap = [];\r\n  }\r\n\r\n  // Helper Methods\r\n  getLeftChildIndex(parentIndex) {\r\n      return 2 * parentIndex + 1;\r\n  }\r\n\r\n  getRightChildIndex(parentIndex) {\r\n      return 2 * parentIndex + 2;\r\n  }\r\n\r\n  getParentIndex(childIndex) {\r\n      return Math.floor((childIndex - 1) / 2);\r\n  }\r\n\r\n  hasLeftChild(index) {\r\n      return this.getLeftChildIndex(index)\r\n          < this.heap.length;\r\n  }\r\n\r\n  hasRightChild(index) {\r\n      return this.getRightChildIndex(index)\r\n          < this.heap.length;\r\n  }\r\n\r\n  hasParent(index) {\r\n      return this.getParentIndex(index) >= 0;\r\n  }\r\n\r\n  leftChild(index) {\r\n      return this.heap[this.getLeftChildIndex(index)];\r\n  }\r\n\r\n  rightChild(index) {\r\n      return this.heap[this.getRightChildIndex(index)];\r\n  }\r\n\r\n  parent(index) {\r\n      return this.heap[this.getParentIndex(index)];\r\n  }\r\n\r\n  swap(indexOne, indexTwo) {\r\n      const temp = this.heap[indexOne];\r\n      this.heap[indexOne] = this.heap[indexTwo];\r\n      this.heap[indexTwo] = temp;\r\n  }\r\n\r\n  peek() {\r\n      if (this.heap.length === 0) {\r\n          return null;\r\n      }\r\n      return this.heap[0];\r\n  }\r\n\r\n  // Removing an element will remove the\r\n  // top element with highest priority then\r\n  // heapifyDown will be called \r\n  get() {\r\n      if (this.heap.length === 0) {\r\n          return null;\r\n      }\r\n      const item = this.heap[0];\r\n      this.heap[0] = this.heap[this.heap.length - 1];\r\n      this.heap.pop();\r\n      this.heapifyDown();\r\n      return item;\r\n  }\r\n\r\n  put(item) {\r\n      this.heap.push(item);\r\n      this.heapifyUp();\r\n  }\r\n\r\n  heapifyUp() {\r\n      let index = this.heap.length - 1;\r\n      while (this.hasParent(index) && this.parent(index)\r\n          > this.heap[index]) {\r\n          this.swap(this.getParentIndex(index), index);\r\n          index = this.getParentIndex(index);\r\n      }\r\n  }\r\n\r\n  heapifyDown() {\r\n      let index = 0;\r\n      while (this.hasLeftChild(index)) {\r\n          let smallerChildIndex = this.getLeftChildIndex(index);\r\n          if (this.hasRightChild(index) && this.rightChild(index)\r\n              < this.leftChild(index)) {\r\n              smallerChildIndex = this.getRightChildIndex(index);\r\n          }\r\n          if (this.heap[index] < this.heap[smallerChildIndex]) {\r\n              break;\r\n          } else {\r\n              this.swap(index, smallerChildIndex);\r\n          }\r\n          index = smallerChildIndex;\r\n      }\r\n  }\r\n    isEmpty() {\r\n      // return true if the queue is empty.\r\n      if(this.heap.length == 0){\r\n        return true;\r\n      }\r\n      else{return false}\r\n  }\r\n}\r\n\r\nexport function uniformCostSearchSystems(start, range){\r\n  const frontier = new PriorityQueue();\r\n  const sectorData = getSectorData();\r\n  const graph = sectorData.SectorMap;\r\n\r\n\r\n  const reached = [];\r\n  const costSoFar = new Map(); //Location, float\r\n\r\n  frontier.put(start);\r\n  costSoFar.set(start, 0);\r\n\r\n\r\n    while (!(frontier.isEmpty())) {\r\n        let currentKey = frontier.get();\r\n        let current = graph.get(currentKey);\r\n        let neighbours = current.edges;\r\n\r\n        neighbours.forEach((hex) =>{\r\n            let costToHere = costSoFar.get(currentKey);\r\n            let newCost = costToHere + hex.cost;\r\n\r\n            if ((!(costSoFar.has(hex.key))) && (newCost <= hex.cost) && (newCost <= range)){\r\n            costSoFar.set(hex.key, newCost);\r\n            frontier.put(hex.key);\r\n            reached.push(hex.key);\r\n                }\r\n            })\r\n    }\r\n    //Returns an array of [hex.key...].\r\n  return reached;\r\n}\r\nexport function uniformCostSearchPathfinder(start, goal, range){\r\n    const frontier = new PriorityQueue();\r\n    const sectorData = getSectorData();\r\n    const graph = sectorData.SectorMap;\r\n  \r\n  \r\n    const cameFrom = new Map(); // Location, optional location B <= A\r\n    const costSoFar = new Map(); //Location, float\r\n  \r\n    frontier.put(start);\r\n    cameFrom.set(start, null);\r\n    costSoFar.set(start, 0);\r\n  \r\n  \r\n      while (!(frontier.isEmpty())) {\r\n          let currentKey = frontier.get();\r\n          let current = graph.get(currentKey);\r\n          let neighbours = current.edges;\r\n\r\n          if(currentKey == goal){\r\n            break;\r\n          }\r\n  \r\n          neighbours.forEach((hex) =>{\r\n              let costToHere = costSoFar.get(currentKey);\r\n              let newCost = costToHere + hex.cost;\r\n  \r\n              if ((!(costSoFar.has(hex.key))) && (newCost <= hex.cost) && (newCost <= range)){\r\n              costSoFar.set(hex.key, newCost);\r\n              frontier.put(hex.key);\r\n              cameFrom.set(hex.key, currentKey);\r\n                  }\r\n              })\r\n      }\r\n    return cameFrom;\r\n}\r\nexport function reconstructPath(cameFrom, start, goal){\r\n    let current = goal;\r\n    let path = [];\r\n\r\n    if(!(cameFrom.get(goal))){\r\n        return;\r\n    }\r\n    while(current != start){\r\n        path.push(current)\r\n        current = cameFrom.get(current);\r\n    }\r\n    path.push(start);\r\n    path.reverse();\r\n\r\n    return path;\r\n}\r\n","import { getSectorData } from \"./utilities\";\r\n\r\nexport function runTradeSimulation(){\r\n    const sector = getSectorData();\r\n    const activeHexes = [];\r\n    sector.SectorMap.forEach(checkActiveHex, activeHexes);\r\n    let maxValue = 0;\r\n    console.log(\"Beep\")\r\n\r\n    activeHexes.forEach((hexKey) =>{ \r\n        origin = sector.SectorMap.get(hexKey);\r\n        let range = origin.system.economicData.tradeRange;\r\n        let tradePartners = origin.system.economicData.findTradePartners(hexKey, range);\r\n        if(tradePartners.length > 0){    \r\n        origin.system.economicData.setTradeRoutes(hexKey, tradePartners)}\r\n\r\n    });\r\n    activeHexes.forEach((hexKey) =>{\r\n        origin = sector.SectorMap.get(hexKey);\r\n        origin.system.economicData.tradeRoutes.forEach((route) =>{\r\n            if(route.tradeRouteVolume > maxValue){maxValue = route.tradeRouteVolume};\r\n        })\r\n    })\r\n    activeHexes.forEach((hexKey) =>{\r\n        origin = sector.SectorMap.get(hexKey);\r\n        origin.system.economicData.tradeRoutes.forEach((route) =>{\r\n            //Issue in route.routeHexesArray\r\n            if(route.routeHexesArray.length > 0){\r\n            route.drawConnectingLine(maxValue, route.routeHexesArray)};})\r\n    })\r\n    activeHexes.forEach((hexKey) => {\r\n        makeTrades(hexKey);\r\n    })\r\n\r\n}\r\n\r\nexport function checkActiveHex(value, key){        \r\n    if(value.system){this.push(key)}\r\n}\r\n\r\nexport function makeTrades(originKey){\r\n    const originHex = getSectorData(originKey);\r\n    const originSupply = originHex.system.economicData.tradeInfo.supply;\r\n    const originDemands = originHex.system.economicData.tradeInfo.demands;\r\n\r\n    const tradeRoutes = originHex.system.economicData.tradeRoutes;\r\n\r\n    const availableSalePrices = [];//Format, (hexKey, price)\r\n    const availablePurchasePrices = [];\r\n\r\n    const highestSalePrice = new Map();\r\n    const lowestPurchasePrice = new Map()\r\n\r\n    originSupply.forEach((good) =>{\r\n        tradeRoutes.forEach((route) => {\r\n            let endKey = route.endKey;\r\n            let endHex = getSectorData(endKey);\r\n            let endDemands = endHex.system.economicData.tradeInfo.demands;\r\n            endDemands.forEach((demand) => {\r\n                if(demand.id == good.id){\r\n                    availableSalePrices.push([endKey, demand]);\r\n                }\r\n            });\r\n        }, good);\r\n        let highestPriceEntry = Math.max(...availableSalePrices[1].price)\r\n        let demandHex = availableSalePrices.findIndex((price) => price[1] == highestPriceEntry.price);\r\n        let sellAmount = route.setAmount(good, highestPriceEntry.price, \"sell\");\r\n        highestSalePrice.set(demandHex, {good : good.id, price : highestPriceEntry.price, amountSold : sellAmount});\r\n        availableSalePrices = [];\r\n        })\r\n    originDemands.forEach((good) =>{\r\n        tradeRoutes.forEach((route) => {\r\n            let endKey = route.endKey;\r\n            let endHex = getSectorData(endKey);\r\n            let endSupply = endHex.system.economicData.tradeInfo.supply;\r\n            endSupply.forEach((supply) => {\r\n                if(supply.id == good.id){\r\n                    availablePurchasePrices.push([endKey, supply]);\r\n                }\r\n            });\r\n        }, good);\r\n        let lowestPriceEntry = Math.min(...availablePurchasePrices[1].price)\r\n        let supplyHex = availablePurchasePrices.findIndex((price) => price[1] == lowestPriceEntry.price);\r\n        let buyAmount = route.setAmount(good, lowestPriceEntry.price, \"buy\");\r\n        lowestPurchasePrice.set(supplyHex, {good : good.id, price : lowestPriceEntry.price, amountBought : buyAmount});\r\n        availablePurchasePrices = [];\r\n        })\r\n}\r\n\r\n\r\n","import { Economy } from \"./economy.js\";\r\nimport { TRADECODES } from \"./economyConstants.js\";\r\nimport { SYSTEM, TRADECODEREQS } from \"./systemConstants.js\";\r\nimport { rollDice } from \"./utilities.js\";\r\n\r\nexport class System{\r\n    constructor(hexKey, id, centerPoint){\r\n        this.id = id;\r\n        this.centerPoint = centerPoint;\r\n        this.systemRolls = this.setSystemRolls();\r\n        this.systemData = this.setSystemData(this.systemRolls);\r\n        this.uwp = this.setUWP(this.systemRolls);\r\n        this.economicData = new Economy(hexKey, this.systemRolls.get('tl'), this.systemRolls.get('government'), this.systemRolls.get('population'), this.systemData.tradeCodes);\r\n        this.tableData = this.setTableData();\r\n    }\r\n    setSystemRolls(){\r\n        let systemRolls = new Map([])\r\n        //Planet Size:\r\n        let planetSize = rollDice(2) - 2;\r\n        systemRolls.set('planetSize', planetSize);\r\n    \r\n        //Atmo Type:\r\n        let atmoType = rollDice(2) - 7 + systemRolls.get('planetSize');\r\n        if(atmoType < 0){atmoType = 0}\r\n        systemRolls.set('atmoType', atmoType);\r\n    \r\n        //Hydro Perc:\r\n        let hydroMod = 0;\r\n        let atmo = systemRolls.get('atmoType');\r\n        if(atmo === 0 || atmo === 1 || atmo === 10 || atmo === 11 || atmo === 12){hydroMod = -4;}\r\n        let hydroResult = rollDice(2) - 7 + systemRolls.get('planetSize') + hydroMod;\r\n        hydroResult < 0 ? systemRolls.set('hydroType', 0) : systemRolls.set('hydroType', hydroResult);\r\n    \r\n        //Pop:\r\n        let popRoll = rollDice(2) - 2;\r\n        systemRolls.set('population', popRoll);\r\n    \r\n        //Gov Type:\r\n        let govRoll = rollDice(2) - 7 + systemRolls.get('population');\r\n        let govType = govRoll;\r\n        if(govRoll > 13){govType = 13}\r\n        if(govRoll < 0){govType = 0}\r\n        systemRolls.set('government', govType);\r\n    \r\n        //Law Level:\r\n        let lawRoll = rollDice(2) - 7 + govType;\r\n        if(lawRoll < 0){govRoll = 0; lawRoll = 0};\r\n\r\n        systemRolls.set('lawLevel', lawRoll);\r\n    \r\n        //Starport:\r\n        let starport = rollDice(2);\r\n        systemRolls.set('starport', starport);\r\n    \r\n        //TL:\r\n        let starportDM;\r\n        if(starport >= 11){starportDM = 6}\r\n            else if(starport > 8 && starport < 11){starportDM = 4}\r\n            else if(starport > 6 && starport < 8){starportDM = 2}\r\n            else if(starport > 2 && starport < 7){starportDM = 0}\r\n            else starportDM = -4;\r\n    \r\n        let sizeDM = 0;\r\n        if(planetSize > 1 && planetSize < 5){sizeDM = 1}\r\n            else if (planetSize < 2){sizeDM = 2}\r\n                else sizeDM = 0;\r\n        \r\n        //TEMP\r\n        let atmoDM = 0;\r\n        if(atmoType < 4 || atmoType > 9){atmoDM = 1}\r\n    \r\n        let hydroDM = 0;\r\n        if(hydroResult === 0 || hydroResult === 9){hydroDM = 1}\r\n            else if(hydroResult === 10){hydroDM = 2}\r\n    \r\n        let popDM = 0;\r\n        if((popRoll > 0 && popRoll < 6) || popRoll === 9){popDM = 1}\r\n            else if(popRoll === 10){popDM = 2}\r\n            else if(popRoll === 11){popDM = 3}\r\n            else if(popRoll === 12){popDM = 4}\r\n    \r\n        let govDM = 0;\r\n        if(govType === 0 || govType === 5){govDM = 1}\r\n            else if (govType === 7){govDM = 2}\r\n            else if (govType === 13 || govType === 14){govDM = -2}\r\n    \r\n        let TL = rollDice(1) + starportDM + sizeDM + atmoDM + hydroDM + popDM + govDM;\r\n        if(TL < 0){TL = 0}\r\n        systemRolls.set('tl', TL);\r\n    \r\n        return systemRolls;\r\n    }\r\n    setSystemData(systemRolls){\r\n        return {\r\n            systemName : this.generateName(),\r\n            size : this.setSize(systemRolls.get('planetSize')),\r\n            atmosphere : this.setAtmosphere(systemRolls.get('atmoType')),\r\n            hydrographics : this.setHydrographics(systemRolls.get('hydroType'), systemRolls.get('planetSize')),\r\n            population : this.setPopulation(systemRolls.get('population')),\r\n            government : this.setGovernment(systemRolls.get('government')),\r\n            lawLevel : this.setLaw(systemRolls.get('lawLevel')),\r\n            techLevel : this.setTL(systemRolls.get('tl')),\r\n            starport : this.setStarport(systemRolls.get('starport')),\r\n            tradeCodes : this.setTradeCodes(systemRolls, TRADECODEREQS)\r\n        }\r\n    }\r\n\r\n    //Returns formatted system data for table - redundant?\r\n    setTableData(){ \r\n        let formattedPop = this.systemData.population.totalPopulation.toLocaleString();\r\n        let tradeCodeLongArray = [];\r\n        let formattedTradeCodes;\r\n        let formatedHydroPercent = `${this.systemData.hydrographics.hydroPercent}%`;\r\n\r\n        this.systemData.tradeCodes.forEach((code) => {\r\n            tradeCodeLongArray.push(TRADECODES[code].codeName)\r\n        })\r\n\r\n        formattedTradeCodes = tradeCodeLongArray.join(\", \")\r\n\r\n        return {\"UWP\":`${this.uwp}`,\r\n                \"Name\": this.systemData.systemName,\r\n                \"Size\":`${this.systemData.size.size} km`,\r\n                \"Gravity\":`${this.systemData.size.gravity} Earth Normal`, \r\n                \"Atmosphere\":`${this.systemData.atmosphere.atmo} at ${this.systemData.atmosphere.psi} psi.`, \r\n                \"Hydropgraphics\": formatedHydroPercent, \r\n                \"Population\":formattedPop,\r\n                \"Government\":this.systemData.government.governmentType,\r\n                \"Law Level\": this.systemData.lawLevel.lawLevel,\r\n                \"Starport Grade\": this.systemData.starport,\r\n                \"Tech Level\": this.systemData.techLevel.tl,\r\n                \"Trade Code\": formattedTradeCodes,\r\n                }                \r\n    }\r\n//  Name\r\n    generateName(){\r\n        //Code from internet to make a random string of letters.\r\n        let randString = (length=6) => {return Math.random().toString(20).substr(2, length)};\r\n        let systemName = randString(6);\r\n        return systemName;\r\n    }\r\n//  Size\r\n    setSize(sizeRoll){\r\n        let sizeIndex = sizeRoll;\r\n        return {size : SYSTEM.SIZE[sizeIndex], gravity : SYSTEM.GRAVITY[sizeIndex]};\r\n    }\r\n//  Atmosphere\r\n    setAtmosphere(atmoRoll){\r\n        const psiCalc = (min, max) => {return (Math.floor(Math.random()*(((max*1000)-(min*1000)+1)+(min*1000))))/1000};\r\n        let atmoIndex = atmoRoll;\r\n        let psi = psiCalc(SYSTEM.PSIMIN[atmoIndex], SYSTEM.PSIMAX[atmoIndex]);\r\n        return {atmo : SYSTEM.ATMO[atmoIndex], psi : psi};\r\n    }\r\n//  Hydrographics\r\n    setHydrographics(hydro, size){\r\n        //For dumb reasons, despite producing values over 10, hydro is maxed at 10;\r\n        let hydroIndex = hydro;\r\n        hydro > 10 ? hydro = 10 : hydro; \r\n        const hydroCalc = (min, max) => {return (Math.floor((100*(Math.random()*(((max - min) + 1) + min))))/100);};\r\n        let hydroPercent = hydroCalc(SYSTEM.HYDROMIN[hydroIndex], SYSTEM.HYDROMAX[hydroIndex]);\r\n        let hydroDesc = hydro;\r\n        if(size <= 1){\r\n                hydroPercent = 0; \r\n                hydroDesc = 11;\r\n            }\r\n        return {hydroPercent : hydroPercent, hydroDesc : SYSTEM.HYDRO[hydroIndex]};\r\n    }\r\n//  Population\r\n    setPopulation(pop){\r\n        //Numbers are a bit fudged, but who cares.\r\n        let popRoll = pop;\r\n        let totalPop = Math.pow(10, popRoll) + (Math.floor(Math.random()*Math.pow(10, popRoll))) - 1; \r\n        return {totalPopulation : totalPop};\r\n    }\r\n//  Government\r\n    setGovernment(govRoll){\r\n        let govIndex = govRoll;\r\n        return {governmentType : SYSTEM.GOV[govIndex]}\r\n    }\r\n//  Laws\r\n    setLaw(lawRoll){\r\n        let law = lawRoll\r\n        if (law > 9){law = 9};\r\n        if(law < 0){law = 0};\r\n        return {lawLevel : law};\r\n    }\r\n//  Starports\r\n    setStarport(stClass){\r\n        let starport;\r\n        if(stClass > 10){starport  = \"A\"}\r\n            else if(stClass === 10 || stClass === 9){starport = \"B\"}\r\n            else if(stClass === 8 || stClass === 7){starport = \"C\"}\r\n            else if(stClass === 6 || stClass === 5){starport = \"D\"}\r\n            else if(stClass === 4 || stClass === 3){starport = \"E\"}\r\n            else starport = \"X\";\r\n        return starport;\r\n    }\r\n//  Tech Level\r\n    setTL(techRoll){\r\n        return {tl : techRoll}\r\n    }\r\n// Trade Codes\r\n    setTradeCodes(rolls, reqArray){\r\n        let tradeCodesArray = [];\r\n        \r\n        let size = rolls.get('planetSize');\r\n        let atmo = rolls.get('atmoType');\r\n        let hydro = rolls.get('hydroType');\r\n        let pop = rolls.get('population');\r\n        let gov = rolls.get('government');\r\n        let law = rolls.get('lawLevel');\r\n\r\n        reqArray.forEach((req) => {\r\n            let checkArray = [];                \r\n            if(req.siz.length === 0 || req.siz.includes(size)){checkArray.push(true)} else {checkArray.push(false)}\r\n            if(req.atm.length === 0 || req.atm.includes(atmo)){checkArray.push(true)} else {checkArray.push(false)}\r\n            if(req.hyd.length === 0 || req.hyd.includes(hydro)){checkArray.push(true)} else {checkArray.push(false)}\r\n            if(req.pop.length === 0 || req.pop.includes(pop)){checkArray.push(true)} else {checkArray.push(false)}\r\n            if(req.gov.length === 0 || req.gov.includes(gov)){checkArray.push(true)} else {checkArray.push(false)}\r\n            if(req.law.length === 0 || req.law.includes(law)){checkArray.push(true)} else {checkArray.push(false)}\r\n\r\n            if(checkArray.includes(false)){return} else {tradeCodesArray.push(req.code)}\r\n        })\r\n\r\n        return tradeCodesArray;\r\n    }\r\n//  Creates Universal World Profile\r\n    setUWP(rolls){\r\n        let uwp = `${this.systemData.starport}-`+`${(this.numToHex(rolls.get('planetSize')))}`+\r\n        `${(this.numToHex(rolls.get('atmoType')))}`+`${this.numToHex(rolls.get('hydroType'))}`+\r\n        `${this.numToHex(rolls.get('population'))}`+`${this.numToHex(rolls.get('government'))}`+\r\n        `${this.numToHex(rolls.get('lawLevel'))}`+`${this.numToHex(rolls.get('tl'))}`;\r\n        return uwp;\r\n    }\r\n    numToHex(num){\r\n        let code = num.toString(16);\r\n        code = code.toUpperCase();\r\n        return code;\r\n    }\r\n}","export const SYSTEM = {\r\n    SIZE : [800, 1600, 3200, 4800, 6400, 8000, 9600, 11200, 12800, 14400, 16000],\r\n    GRAVITY : [\"Negligible\", 0.05, 0.15, 0.25, 0.35, 0.45, 0.7, 0.9, 1.0, 1.25, 1.4],\r\n    ATMO :[\"None\", \"Trace\", \"Very Thin, Tainted\", \"Very Thin\", \"Thin, Tainted\", \"Thin\", \"Standard\", \r\n    \"Standard, Tainted\",\"Dense\", \"Dense, Tainted\", \"Exotic\", \"Corrosive\", \"Insidious\", \r\n    \"Dense, High\", \"Thin, Low\", \"Unusual\"],\r\n    PSIMIN : [0, 0.001, 0.1, 0.1, 0.43, 0.43, 0.71, 0.71, 1.5, 1.5, 0.43, 0.43, 0.43, 1.5, 0.1, 0],\r\n    PSIMAX : [0, 0.09, 0.42, 0.42, 0.7, 0.7, 1.49, 1.49, 2.49, 2.49, 2.49, 2.49, 2.49, 5, 0.5, 5],\r\n    HYDROMIN : [0, 6, 16, 26, 36, 46, 56, 66, 76, 86, 96],\r\n    HYDROMAX :[5, 15, 25, 35, 45, 55, 65, 75, 85, 95, 100],\r\n    HYDRO : [\"Desert World\", \"Dry World\", \"A few small seas\", \"Small seas and oceans\", \"Wet World\", \"Large oceans\",\r\n    \"\", \"Terran Standard\", \"Water world\", \"Only a few small islands and archipelagos\",\r\n    \"Almost entirely water\", \"None\"],\r\n    GOV : [ \"None\",\"Company/Corporation\",\"Participating Democracy\",\"Self-Perpetuating Oligarchy\",\r\n    \"Representative Democracy\",\"Feudal Technocracy\",\"Captive Government\",\"Balkanisation\",\r\n    \"Civil Service Bureaucracy\",\"Impersonal Bureaucracy\",\"Charismatic Dictator\",\r\n    \"Non-Charistmatic Dictator\",\"Charismatic Oligarchy\",\"Religious Dictatorship\"]\r\n}\r\n\r\nexport const TRADECODEREQS =[\r\n    {code : \"As\", siz :[0], atm : [0], hyd :[0], pop :[], gov : [], law : []},\r\n    {code : \"De\", siz :[], atm : [2, 3, 4, 5, 6, 7, 8, 9], hyd :[0], pop :[], gov : [], law : []},\r\n    {code : \"Fl\", siz :[], atm : [10, 11, 12], hyd :[1, 2, 3, 4, 5, 6, 7, 8, 9, 10], pop :[], gov : [], law : []},\r\n    {code : \"Ga\", siz :[6, 7, 8], atm : [5, 6, 8], hyd :[5, 6, 7], pop :[], gov : [], law : []},\r\n    //Hellworld seems disconnected from other tags, remove?\r\n    {code : \"He\", siz :[3, 4, 5, 6, 7, 8, 9, 10, 11, 12], atm : [2, 3, 7, 8, 10, 11, 12], hyd :[0, 1, 2], pop :[], gov : [], law : []},\r\n    {code : \"Ic\", siz :[], atm : [0, 1], hyd :[1, 2, 3, 4, 5, 6, 7, 8, 9, 10], pop :[], gov : [], law : []},\r\n    {code : \"Oc\", siz :[10, 11, 12], atm : [3, 4, 5, 6, 7, 8, 9, 10, 11, 12], hyd :[10], pop :[], gov : [], law : []},\r\n    {code : \"Va\", siz :[], atm : [0], hyd :[], pop :[], gov : [], law : []},\r\n    {code : \"Wa\", siz :[3, 4, 5, 6, 7, 8, 9, 10], atm : [3, 4, 5, 6, 7, 8, 9, 10, 11, 12], hyd :[10], pop :[], gov : [], law : []},\r\n    \r\n    {code : \"Ba\", siz :[], atm : [], hyd :[], pop :[0], gov : [], law : []},\r\n    {code : \"Lo\", siz :[], atm : [], hyd :[], pop :[1, 2, 3], gov : [], law : []},\r\n    {code : \"Ni\", siz :[], atm : [], hyd :[], pop :[4, 5, 6], gov : [], law : []},\r\n    {code : \"Ph\", siz :[], atm : [], hyd :[], pop :[7, 8], gov : [], law : []},\r\n    {code : \"Hi\", siz :[], atm : [], hyd :[], pop :[9, 10, 11, 12, 13, 14, 15], gov : [], law : []},\r\n    \r\n    {code : \"Pa\", siz :[], atm : [4, 5, 6, 7, 8, 9], hyd :[4, 5, 6, 7, 8], pop :[4, 8], gov : [], law : []},\r\n    {code : \"Ag\", siz :[], atm : [4, 5, 6, 7, 8, 9], hyd :[4, 5, 6, 7, 8], pop :[5, 6, 7], gov : [], law : []},\r\n    {code : \"Na\", siz :[], atm : [0, 1, 2, 3], hyd :[], pop :[6, 7, 8, 9, 10, 11, 12, 13, 14, 15], gov : [], law : []},\r\n    {code : \"Pi\", siz :[], atm : [0, 1, 2, 4, 7, 9], hyd :[], pop :[7, 8], gov : [], law : []},\r\n    {code : \"In\", siz :[], atm : [0, 1, 2, 3, 7, 9, 10, 11, 12], hyd :[], pop :[9, 10, 11, 12, 13, 14, 15], gov : [], law : []},\r\n    {code : \"Po\", siz :[], atm : [2, 3, 4, 5], hyd :[0, 1, 2, 3], pop :[], gov : [], law : []},\r\n    {code : \"Pr\", siz :[], atm : [6, 8], hyd :[], pop :[5, 9], gov : [], law : []},\r\n    {code : \"Ri\", siz :[], atm : [6, 8], hyd :[], pop :[6, 7, 8], gov : [], law : []}\r\n]","import { getSectorData, getSystem } from \"./utilities.js\";\r\nimport { uniformCostSearchPathfinder, reconstructPath } from \"./pathfinding.js\";\r\n\r\nexport class TradeRoute{\r\n    constructor(start, end, maxRange){\r\n        this.startKey = start;\r\n        this.endKey = end;\r\n        this.routeKey = `${start}=>${end}`;\r\n        this.routeHexesArray= this.findRoute(start, end, maxRange);\r\n\r\n        this.startSystem = getSystem(start);\r\n        this.endSystem = getSystem(end);\r\n\r\n        this.startTradeInfo = this.startSystem.system.economicData.tradeInfo;\r\n        this.endTradeInfo = this.endSystem.system.economicData.tradeInfo;\r\n\r\n        this.routeTradeCapacity = this.setHighestTradeCapacity(this.startSystem.system.economicData.tradeCapacity, this.endSystem.system.economicData.tradeCapacity);\r\n        //Need to fix tradeRouteVolume to fix line width.\r\n        this.tradeRouteVolume = 0;\r\n        this.tradeRouteProfit = 0;\r\n        this.tradeRouteDetails = []; \r\n    }\r\n    //Red Blob Games to the rescue\r\n    findRoute(start, end, range){\r\n        let pathFinder = uniformCostSearchPathfinder(start, end, range);\r\n        let route = reconstructPath(pathFinder, start, end);\r\n       \r\n        return route;\r\n    }\r\n\r\n    setHighestTradeCapacity(startCapacity, endCapacity){\r\n        if(startCapacity >= endCapacity){\r\n            return startCapacity;\r\n        }\r\n        else return endCapacity;\r\n    }\r\n\r\n    exchangeGoods(){\r\n        this.startTradeData.sellingIdArray.forEach((id) =>{\r\n            let sellGood = this.startTradeInfo.supply.find((good) => good.id == id);\r\n            let buyGood = this.endTradeInfo.demand.find((good) => good.id == id);\r\n            let type = `sell`\r\n            if(sellGood != undefined && buyGood != undefined){this.calculateSale(id, sellGood, buyGood, type);}\r\n        });\r\n        this.startTradeData.buyingIdArray.forEach((id) =>{\r\n            let buyGood = this.startTradeInfo.demand.find((good) => good.id == id);\r\n            let sellGood = this.endTradeInfo.supply.find((good) => good.id == id);\r\n            let type = `buy`\r\n            if(sellGood && buyGood){this.calculateSale(id, sellGood, buyGood, type);}\r\n        });\r\n    }\r\n\r\n    calculateSale(id, sellGood, buyGood, type){\r\n            //This is where dynamic pricing would go - IF I HAD ANY\r\n        let maxSellOffer = sellGood.supplyAmount;\r\n        let maxBuyOffer = buyGood.demandAmount;\r\n        let tradeCapacity = this.routeTradeCapacity;\r\n\r\n        let exchangeArray = [maxSellOffer, maxBuyOffer, tradeCapacity]\r\n        let offerAmount = Math.min(...exchangeArray);\r\n\r\n        let sellPrice = buyGood.price\r\n        let profit = buyGood.price - sellGood.price;\r\n\r\n        //THIS IS WHERE YOU CAN ABORT THE SALE\r\n        //TEMP VALUE\r\n        let sale = true;\r\n\r\n        if(sale = true){\r\n            maxSellOffer -= offerAmount;\r\n            maxBuyOffer -= offerAmount;\r\n\r\n            this.tradeRouteVolume += offerAmount;\r\n            this.tradeRouteProfit += profit;\r\n            this.tradeRouteDetails.push({exchangeType : type, goodId : id, offerAmount : offerAmount, sellPrice : sellPrice, profit : profit}) \r\n        }\r\n    }\r\n    drawConnectingLine(maxValue, pathArray){\r\n        const width = this.calculateTradeRouteWidth(this.tradeRouteVolume, maxValue);\r\n        const routeKey = this.routeKey;\r\n        const tradeGroup = document.getElementById(\"trade-group\");\r\n        const sectorData = getSectorData();\r\n\r\n        if(pathArray.length == 0){\r\n            return;\r\n        }\r\n\r\n        let newPath = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\r\n        let pathStart = sectorData.SectorMap.get(pathArray[0])\r\n        let pathString = `M${pathStart.centerPoint.x} ${pathStart.centerPoint.y} `;\r\n        for(let i = 1; i < pathArray.length; i++) {\r\n            let step = sectorData.SectorMap.get(pathArray[i]);\r\n            let stepCoords = step.centerPoint;\r\n            \r\n            let x = stepCoords.x;\r\n            let y = stepCoords.y;\r\n            pathString += `L${x} ${y} `\r\n        }\r\n\r\n\r\n        newPath.setAttribute(\"d\", pathString)\r\n        newPath.setAttribute(\"class\",\"tradeLine\");\r\n        newPath.setAttribute(\"id\", routeKey);\r\n        newPath.setAttribute(\"style\", `fill:none; stroke:red; stroke-width: ${width}`);\r\n        \r\n\r\n\r\n        newPath.addEventListener(\"click\", this.tradeRouteOnClick);\r\n\r\n        tradeGroup.appendChild(newPath);\r\n    }\r\n    calculateTradeRouteWidth(routeValue, maxValue){\r\n        let maxWidth = 20\r\n        let width;\r\n        //Oh god, basic maths\r\n        let min = maxValue / 100;\r\n        let widthPercent = routeValue / (min*100);\r\n        width = Math.tanh(widthPercent) *20;\r\n        if(width < 4){ width = 4};\r\n\r\n        return width;\r\n    }\r\n    tradeRouteOnClick(){\r\n        const SectorTradeRoutes = document.getElementById(\"hex-container\").sectorDataContainer.SectorMap;\r\n        console.log(this.id);\r\n        let clickedRoute = SectorTradeRoutes.get(this.id);\r\n        console.log(clickedRoute);\r\n    }\r\n    setAmount(originGood, partnerGood, type){\r\n        this.startTradeInfo = this.startSystem.system.economicData.tradeInfo;\r\n        this.endTradeInfo = this.endSystem.system.economicData.tradeInfo;\r\n        let max = this.routeTradeCapacity;\r\n        let amountArray = [];\r\n\r\n\r\n        if(type == \"sell\"){\r\n            //supply -> demand\r\n            amountArray = [originGood.supplyAmount, partnerGood.demandAmount, max]}\r\n\r\n        if(type == \"buy\"){\r\n            //demand -> supply\r\n            amountArray = [originGood.demandAmount, partnerGood.supplyAmount, max]}\r\n        let lowest = Math.min(...amountArray);\r\n        return lowest;\r\n    }\r\n}","import { TRADEGOODS } from \"./economyConstants.js\";\r\n\r\nexport const DOMIdToHexKeyMap = new Map();\r\nexport const HexKeyToDOMIdMap = new Map();\r\n\r\nexport const direction_differences = [\r\n  // even cols \r\n  [[+1,  0], [+1, -1], [ 0, -1], \r\n   [-1, -1], [-1,  0], [ 0, +1]],\r\n  // odd cols \r\n  [[+1, +1], [+1,  0], [ 0, -1], \r\n   [-1,  0], [-1, +1], [ 0, +1]],\r\n];\r\n\r\nexport function getSectorData(){\r\n  const sectorData = document.getElementById(\"hex-container\").sectorDataContainer;\r\n  return sectorData;\r\n}\r\n\r\nexport function getSystem(hexKey){\r\n  const sectorData = getSectorData();\r\n  let system = sectorData.SectorMap.get(hexKey);\r\n  return system;\r\n}\r\n\r\nexport function rollDice(numDice){\r\n\r\n  let total = 0;\r\n  for (let i=0; i < numDice; i++){\r\n      total += Math.floor(Math.random() * 6 + 1);\r\n  }\r\n  return total\r\n}\r\n//Tab Control Code\r\n//Currently only works for System Information\r\nexport function openTab(event) {\r\n  // Declare all variables\r\n  let i, tabContent, tabLinks;\r\n  // Get all elements with class=\"\" and hide them\r\n  tabContent = document.getElementsByClassName(\"tab-content\");\r\n  for (i = 0; i < tabContent.length; i++) {\r\n    tabContent[i].style.display = \"none\";\r\n  }\r\n  // Get all elements with class=\"tabLinks\" and remove the class \"active\"\r\n  tabLinks = document.getElementsByClassName(\"tab-links\");\r\n  for (i = 0; i < tabLinks.length; i++) {\r\n    tabLinks[i].className = tabLinks[i].className.replace(\" active\", \"\");\r\n  }\r\n  //Creates tab content if not already created\r\n  // Show the current tab, and add an \"active\" class to the button that opened the tab\r\n  let activeTab = event.target.id;\r\n  let tab = document.getElementById(activeTab);\r\n  tab.className += \" active\";\r\n  if(activeTab != undefined){\r\n  activeTab += \"-content\";\r\n  document.getElementById(activeTab).style.display = \"block\";\r\n  //this might not be working either way\r\n\r\n  }\r\n}\r\n\r\nexport function generateInfoBox(tableData){\r\n  let container = document.getElementById(\"content-container\");\r\n  let infoBox = document.getElementById(\"system-information-content\");\r\n\r\n  if(infoBox === undefined || infoBox === null){\r\n    infoBox = document.createElement(\"div\")\r\n    infoBox.setAttribute(\"id\", \"system-information-content\");\r\n  }\r\n\r\n  //Creates table\r\n  let displayTable = document.createElement(\"table\");\r\n\r\n  displayTable.setAttribute(\"class\", \"info-table\");\r\n  displayTable.setAttribute(\"id\", \"all-systems-table\");\r\n\r\n  //Populates rows:\r\n  let labels = [];\r\n  let values = [];\r\n  for(const data in tableData){\r\n      labels.push(data);\r\n      values.push(tableData[data]);\r\n  }\r\n\r\n  for(let i = 0; i < labels.length; i++){\r\n      let row = displayTable.insertRow(i)\r\n      let label = row.insertCell(0);\r\n      let value = row.insertCell(1);\r\n      label.innerHTML = labels[i];\r\n      value.innerHTML = values[i]; \r\n  }\r\n  container.appendChild(infoBox)\r\n  infoBox.appendChild(displayTable);\r\n}\r\n\r\n//hex.system.systemData.economy.tradeData, \"system-trade-table\", \"system-trade\"\r\nexport function generateTradeBox(data){\r\n\r\n  let supply = data.tradeInfo.supply;\r\n  let demand = data.tradeInfo.demand;\r\n  let container = document.getElementById(\"content-container\");\r\n  let tradeBox = document.getElementById(\"system-trade-content\");\r\n\r\n  if(tradeBox === null){\r\n    tradeBox = document.createElement(\"div\")\r\n    tradeBox.setAttribute(\"id\", \"system-trade-content\");\r\n  }\r\n  //Creates table\r\n  let displayTable = document.createElement(\"table\");\r\n  let tblbody = document.createElement(\"tbody\");\r\n  displayTable.setAttribute(\"class\", \"info-table\");\r\n\r\n  //Populates rows:\r\n  let supplyIndex = [];\r\n  let demandIndex = [];\r\n\r\n  let goodsList = TRADEGOODS.map(({ goodsName }) => goodsName);\r\n\r\n  goodsList.forEach((item, index) =>{\r\n    let matchSupply = supply.find(({ good }) => good === item);\r\n    if(matchSupply){supplyIndex.push({index : index, amount : matchSupply.supplyAmount, price : matchSupply.price})}\r\n    let matchDemand = demand.find(({ good }) => good === item);\r\n    if(matchDemand){demandIndex.push({index : index, amount : matchDemand.demandAmount, price : matchDemand.price})}\r\n  });\r\n\r\n  //Create Headings:\r\n  let headingRow = document.createElement(\"tr\");\r\n  let label1Cell = document.createElement(\"td\");\r\n  let label1CellText = document.createTextNode(\"Trade Goods\");\r\n\r\n  let label2Cell = document.createElement(\"td\");\r\n  let label2CellText = document.createTextNode(\"Supply\");\r\n\r\n  let label3Cell = document.createElement(\"td\");\r\n  let label3CellText = document.createTextNode(\"Demand\");\r\n\r\n  label1Cell.appendChild(label1CellText);\r\n  label2Cell.appendChild(label2CellText);\r\n  label3Cell.appendChild(label3CellText);\r\n\r\n  headingRow.appendChild(label1Cell);\r\n  headingRow.appendChild(label2Cell);\r\n  headingRow.appendChild(label3Cell);\r\n\r\n  tblbody.appendChild(headingRow);\r\n\r\n  for (let i = 0; i < goodsList.length; i ++){\r\n    let row = document.createElement(\"tr\");\r\n\r\n    let goodsListCell = document.createElement(\"td\");\r\n    let supplyIndexCell = document.createElement(\"td\");\r\n    let demandIndexCell = document.createElement(\"td\");\r\n    \r\n    let goodsListText = document.createTextNode(goodsList[i]);\r\n\r\n    let supplyItem = supplyIndex.find(({ index }) => index === i);\r\n    let demandItem = demandIndex.find(({ index }) => index === i);\r\n\r\n    let supplyPriceText = document.createTextNode(\"Not available\");\r\n    let demandPriceText = document.createTextNode(\"Not needed\");\r\n\r\n    if(supplyItem){supplyPriceText = document.createTextNode(`${supplyItem.amount} units, at ${supplyItem.price} per unit`)}\r\n    if(demandItem){demandPriceText = document.createTextNode(`${demandItem.amount} units, at ${demandItem.price} per unit`)}\r\n\r\n    goodsListCell.appendChild(goodsListText);\r\n    supplyIndexCell.appendChild(supplyPriceText);\r\n    demandIndexCell.appendChild(demandPriceText);\r\n\r\n    row.appendChild(goodsListCell);\r\n    row.appendChild(supplyIndexCell);\r\n    row.appendChild(demandIndexCell);\r\n\r\n    if(!(supplyPriceText.textContent === \"Not available\" && demandPriceText.textContent === \"Not needed\")){\r\n      tblbody.appendChild(row);\r\n    }\r\n  }\r\n  container.appendChild(tradeBox)\r\n  displayTable.appendChild(tblbody);\r\n  tradeBox.appendChild(displayTable);\r\n}\r\n//Bring into standard with above table\r\n//Currently not working\r\nexport function allSystemsTable(systemsList){\r\n  let systemsBox = document.getElementById(\"all-systems-content\");\r\n  //Creates table\r\n  let displayTable = document.createElement(\"table\");\r\n\r\n  document.getElementById(\"content-container\").style.height=`${document.getElementById(\"svg-container\").offsetHeight}px`;\r\n \r\n  displayTable.setAttribute(\"class\", \"info-table\");\r\n  displayTable.setAttribute(\"id\", \"all-systems-table\");\r\n  systemsBox.appendChild(displayTable);\r\n  //Creates headings - Maybe there's a better way of doing it?\r\n  let headings = displayTable.insertRow(0);\r\n  let headingHex = headings.insertCell(0);\r\n  headingHex.innerHTML = \"Hex\";\r\n  let headingName = headings.insertCell(1);\r\n  headingName.innerHTML = \"Name\";\r\n  let headingUWP = headings.insertCell(2);\r\n  headingUWP.innerHTML = \"UWP\";\r\n\r\n  //Creates rows\r\n  for(let i = 1; i <= systemsList.length; i++){\r\n    let listKey = systemsList[i-1][0];\r\n    let listItem = systemsList[i-1][1];\r\n\r\n    let row = displayTable.insertRow(i);\r\n    let hex = row.insertCell(0);\r\n    hex.setAttribute(\"class\", \"allSystemsCell\");\r\n    let name = row.insertCell(1);\r\n    name.setAttribute(\"class\", \"allSystemsCell\");\r\n    let uwp = row.insertCell(2);\r\n    uwp.setAttribute(\"class\", \"allSystemsCell\");\r\n\r\n    row.setAttribute(\"id\", `Row: ${listKey}`);\r\n    row.setAttribute(\"class\", \"allSystemsRow\");\r\n\r\n    let relatedHex;\r\n    row.onmouseover = (event) => {\r\n      let selectedRowHex = event.currentTarget.id;\r\n      let hexKey = DOMIdToHexKeyMap.get(selectedRowHex);\r\n      relatedHex = getSystem(hexKey);\r\n      let rowCells = event.currentTarget.childNodes;\r\n      rowCells.forEach(function(cell){cell.setAttribute(\"class\", \"allSystemsCellHover\")});\r\n      document.getElementById(`${relatedHex.id}`).setAttribute(\"class\",\"hover-hex\");\r\n      //this doesn't leave the original hex as clicked-hex\r\n\r\n\r\n    }\r\n    row.onmouseout = (event) => {\r\n      let selectedRowHex = event.currentTarget.id;\r\n      let hexKey = DOMIdToHexKeyMap.get(selectedRowHex);\r\n      relatedHex = getSystem(hexKey);\r\n      let rowCells = event.currentTarget.childNodes;\r\n      rowCells.forEach(function(cell){cell.setAttribute(\"class\", \"allSystemsCell\")});\r\n      let relatedHexPolygon = document.getElementById(`${relatedHex.id}`);\r\n      if(relatedHexPolygon.getAttribute(\"class\") != \"clicked-hex\"){\r\n        relatedHexPolygon.setAttribute(\"class\",\"hex\");}\r\n    }\r\n    row.onclick = function(){\r\n      (relatedHex.hexOnClick(relatedHex))\r\n      document.getElementById(`${relatedHex.id}`).setAttribute(\"class\",\"clicked-hex\");\r\n    };\r\n    \r\n    hex.innerHTML = listItem.hex;\r\n    name.innerHTML = listItem.name;\r\n    uwp.innerHTML = listItem.uwp;\r\n  } \r\n}\r\n//Code from https://stackoverflow.com/questions/45408920/plain-javascript-scrollintoview-inside-div\r\nexport function scrollParentToChild(parent, child) {\r\n\r\n  // Where is the parent on page\r\n  var parentRect = parent.getBoundingClientRect();\r\n  // What can you see?\r\n  var parentViewableArea = {\r\n    height: parent.clientHeight,\r\n    width: parent.clientWidth\r\n  };\r\n\r\n  // Where is the child\r\n  var childRect = child.getBoundingClientRect();\r\n  // Is the child viewable?\r\n  var isViewable = (childRect.top >= parentRect.top) && (childRect.bottom <= parentRect.top + parentViewableArea.height);\r\n\r\n  // if you can't see the child try to scroll parent\r\n  if (!isViewable) {\r\n        // Should we scroll using top or bottom? Find the smaller ABS adjustment\r\n        const scrollTop = childRect.top - parentRect.top;\r\n        const scrollBot = childRect.bottom - parentRect.bottom;\r\n        if (Math.abs(scrollTop) < Math.abs(scrollBot)) {\r\n            // we're near the top of the list\r\n            parent.scrollTop += scrollTop;\r\n        } else {\r\n            // we're near the bottom of the list\r\n            parent.scrollTop += scrollBot;\r\n        }\r\n  }\r\n\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\r\n * Use this file for JavaScript code that you want to run in the front-end\r\n * on posts/pages that contain this block.\r\n *\r\n * When this file is defined as the value of the `viewScript` property\r\n * in `block.json` it will be enqueued on the front end of the site.\r\n *\r\n * Example:\r\n *\r\n * ```js\r\n * {\r\n *   \"viewScript\": \"file:./view.js\"\r\n * }\r\n * ```\r\n *\r\n * If you're not making any changes to this file because your project doesn't need any\r\n * JavaScript running in the front-end, then you should delete this file and remove\r\n * the `viewScript` property from `block.json`.\r\n *\r\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-metadata/#view-script\r\n */\r\n\r\n/* eslint-disable no-console */\r\nimport {generateMap, resetMap} from \"./modules/mapCode.js\";\r\nimport { runTradeSimulation } from \"./modules/simulation.js\";\r\ndocument.getElementById(\"generator-button\").addEventListener('click', generateMap);\r\ndocument.getElementById(\"reset-button\").addEventListener('click', resetMap);\r\ndocument.getElementById(\"run-button\").addEventListener('click', runTradeSimulation);\r\n/* eslint-enable no-console */\r\n"],"names":["TRADECODES","TRADEGOODS","BASICTRADEGOODS","TradeRoute","getSectorData","getSystem","uniformCostSearchSystems","Economy","constructor","hexKey","techLevel","government","popRoll","tradeCodes","govtTier","tradeCapacity","setTradeCapacity","tradeInfo","setTradeInfo","tradeBalance","tradeRange","setTradeRange","tradeRoutes","Map","pop","tradeMultiplier","includes","supplyArray","demandArray","forEach","code","codeArray","push","setSupply","setDemand","supply","demand","setInitialPricing","setSystemModifiers","modifiers","supplies","codeConst","newGoods","tradeGoods","good","tradeGood","getGoodsDetails","supplyAmount","modifier","supplyEffect","goodsClass","strength","id","goodsName","basePrice","foundDemand","demands","demandsArray","demandAmount","demandEffect","foundSupply","goodID","selectedGood","find","updatedSupply","updateSupply","updatedDemand","updateDemand","price","tech","findTradePartners","startKey","tradePartnersList","setTradeRoutes","hex","system","tradeRoute","set","console","log","codeName","codeClass","openTab","generateInfoBox","generateTradeBox","rollDice","direction_differences","DOMIdToHexKeyMap","HexKeyToDOMIdMap","scrollParentToChild","System","Sector","col","row","scale","TradeMap","systemList","SectorMap","makeSectorMap","hexContainer","document","createElementNS","setAttribute","getElementById","appendChild","margin","r","svgHeight","Math","sqrt","svgWidth","floor","hexGroup","tradeGroup","c","colNum","rowNum","Hex","tableRow","name","tableData","Name","uwp","UWP","edges","setEdges","hexSize","centerPoint","hexCenter","setSystem","moveCost","setMoveCost","hexDOM","createHex","x","y","centerpoint","newHex","newHexGroup","hexPoints","addEventListener","hexOnClick","onmouseover","rowId","get","container","relatedTableEntry","rowCells","childNodes","cell","onmouseout","table","setMarker","info","trade","currentTab","getElementsByClassName","currentTabID","target","hasChildNodes","innerHTML","economicData","querySelectorAll","points","i","angleDeg","angleRad","PI","xPoint","cos","yPoint","sin","cx","cy","mark","cost","colMax","rowMax","parity","dif","direction","edgeCol","edgeRow","key","allSystemsTable","generateMap","e","dataContainer","gen","parentElement","value","length","style","display","tab","t","tabLinks","className","replace","height","offsetHeight","sectorDataContainer","resetMap","systemContent","oldSystem","firstElementChild","allContent","oldAll","removeChild","mapContainer","map","PriorityQueue","heap","getLeftChildIndex","parentIndex","getRightChildIndex","getParentIndex","childIndex","hasLeftChild","index","hasRightChild","hasParent","leftChild","rightChild","parent","swap","indexOne","indexTwo","temp","peek","item","heapifyDown","put","heapifyUp","smallerChildIndex","isEmpty","start","range","frontier","sectorData","graph","reached","costSoFar","currentKey","current","neighbours","costToHere","newCost","has","uniformCostSearchPathfinder","goal","cameFrom","reconstructPath","path","reverse","runTradeSimulation","sector","activeHexes","checkActiveHex","maxValue","origin","tradePartners","route","tradeRouteVolume","routeHexesArray","drawConnectingLine","makeTrades","originKey","originHex","originSupply","originDemands","availableSalePrices","availablePurchasePrices","highestSalePrice","lowestPurchasePrice","endKey","endHex","endDemands","highestPriceEntry","max","demandHex","findIndex","sellAmount","setAmount","amountSold","endSupply","lowestPriceEntry","min","supplyHex","buyAmount","amountBought","SYSTEM","TRADECODEREQS","systemRolls","setSystemRolls","systemData","setSystemData","setUWP","setTableData","planetSize","atmoType","hydroMod","atmo","hydroResult","govRoll","govType","lawRoll","starport","starportDM","sizeDM","atmoDM","hydroDM","popDM","govDM","TL","systemName","generateName","size","setSize","atmosphere","setAtmosphere","hydrographics","setHydrographics","population","setPopulation","setGovernment","lawLevel","setLaw","setTL","setStarport","setTradeCodes","formattedPop","totalPopulation","toLocaleString","tradeCodeLongArray","formattedTradeCodes","formatedHydroPercent","hydroPercent","join","gravity","psi","governmentType","tl","randString","random","toString","substr","sizeRoll","sizeIndex","SIZE","GRAVITY","atmoRoll","psiCalc","atmoIndex","PSIMIN","PSIMAX","ATMO","hydro","hydroIndex","hydroCalc","HYDROMIN","HYDROMAX","hydroDesc","HYDRO","totalPop","pow","govIndex","GOV","law","stClass","techRoll","rolls","reqArray","tradeCodesArray","gov","req","checkArray","siz","atm","hyd","numToHex","num","toUpperCase","end","maxRange","routeKey","findRoute","startSystem","endSystem","startTradeInfo","endTradeInfo","routeTradeCapacity","setHighestTradeCapacity","tradeRouteProfit","tradeRouteDetails","pathFinder","startCapacity","endCapacity","exchangeGoods","startTradeData","sellingIdArray","sellGood","buyGood","type","undefined","calculateSale","buyingIdArray","maxSellOffer","maxBuyOffer","exchangeArray","offerAmount","sellPrice","profit","sale","exchangeType","goodId","pathArray","width","calculateTradeRouteWidth","newPath","pathStart","pathString","step","stepCoords","tradeRouteOnClick","routeValue","maxWidth","widthPercent","tanh","SectorTradeRoutes","clickedRoute","originGood","partnerGood","amountArray","lowest","numDice","total","event","tabContent","activeTab","infoBox","createElement","displayTable","labels","values","data","insertRow","label","insertCell","tradeBox","tblbody","supplyIndex","demandIndex","goodsList","matchSupply","amount","matchDemand","headingRow","label1Cell","label1CellText","createTextNode","label2Cell","label2CellText","label3Cell","label3CellText","goodsListCell","supplyIndexCell","demandIndexCell","goodsListText","supplyItem","demandItem","supplyPriceText","demandPriceText","textContent","systemsList","systemsBox","headings","headingHex","headingName","headingUWP","listKey","listItem","relatedHex","selectedRowHex","currentTarget","relatedHexPolygon","getAttribute","onclick","child","parentRect","getBoundingClientRect","parentViewableArea","clientHeight","clientWidth","childRect","isViewable","top","bottom","scrollTop","scrollBot","abs"],"sourceRoot":""}