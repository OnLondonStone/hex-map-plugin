{"version":3,"file":"modules/mapCode.js","mappings":"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","sources":["webpack://hex-map-block/./src/modules/economy.js","webpack://hex-map-block/./src/modules/economyConstants.js","webpack://hex-map-block/./src/modules/makemap.js","webpack://hex-map-block/./src/modules/mapCode.js","webpack://hex-map-block/./src/modules/system.js","webpack://hex-map-block/./src/modules/systemConstants.js","webpack://hex-map-block/./src/modules/tradeRoutes.js","webpack://hex-map-block/./src/modules/utilities.js","webpack://hex-map-block/webpack/bootstrap","webpack://hex-map-block/webpack/runtime/define property getters","webpack://hex-map-block/webpack/runtime/hasOwnProperty shorthand","webpack://hex-map-block/webpack/runtime/make namespace object","webpack://hex-map-block/webpack/before-startup","webpack://hex-map-block/webpack/startup","webpack://hex-map-block/webpack/after-startup"],"sourcesContent":["import {TRADECODES, TRADEGOODS, BASICTRADEGOODS} from \"./economyConstants.js\"\r\nimport { TradeRoute } from \"./tradeRoutes.js\";\r\nimport { getSectorData } from \"./mapCode.js\";\r\n\r\nexport class Economy{\r\n    constructor(techLevel, government, popRoll, tradeCodes){\r\n        this.techLevel = techLevel;\r\n        this.govtTier = government;\r\n        this.tradeCodes = tradeCodes;\r\n        this.popRoll = popRoll;\r\n        this.tradeCapacity = this.setTradeCapacity(this.tradeCodes, this.popRoll);\r\n        this.tradeInfo = this.setTradeInfo(this.popRoll, this.tradeCodes, BASICTRADEGOODS);\r\n        this.tradeBalance = 0;\r\n        this.tradeRange = this.setTradeRange(this.techLevel, this.tradeCodes);\r\n        this.tradeRoutes = new Map ([]);\r\n    }\r\n\r\n    setTradeCapacity(tradeCodes, pop){\r\n        let tradeMultiplier;\r\n        let tradeCapacity;\r\n\r\n        if (tradeCodes.includes(\"Ba\")){ tradeMultiplier = 0 }\r\n        if (tradeCodes.includes(\"Lo\")){ tradeMultiplier = 1 }\r\n        if (tradeCodes.includes(\"Ni\")){ tradeMultiplier = 2 }\r\n        if (tradeCodes.includes(\"Ph\")){ tradeMultiplier = 4 }\r\n        if (tradeCodes.includes(\"Hi\")){ tradeMultiplier = 8 }\r\n\r\n        tradeCapacity = tradeMultiplier * pop;\r\n        return tradeCapacity;\r\n    }\r\n    //Poss check for duplicated values\r\n    setTradeInfo(pop, tradeCodes){\r\n        let supplyArray = [];\r\n        let demandArray = [];\r\n\r\n        let tradeInfo = {}\r\n        tradeCodes.forEach(code =>{\r\n            let codeArray = [code];\r\n\r\n            supplyArray.push(...this.setSupply(pop, codeArray));\r\n            demandArray.push(...this.setDemand(pop, codeArray));\r\n        })\r\n\r\n        tradeInfo.supply = supplyArray;\r\n        tradeInfo.demand = demandArray;\r\n\r\n        tradeInfo = this.setInitialPricing(tradeInfo);\r\n\r\n        return tradeInfo;\r\n    }\r\n    setSystemModifiers(tradeCodes){\r\n        let modifiers = [];\r\n\r\n        tradeCodes.forEach(code => {modifiers.push(TRADECODES[code].modifiers)})\r\n\r\n        return modifiers;\r\n    }\r\n    //Not working -?\r\n    setSupply(pop, tradeCodes){\r\n        let supplies = []\r\n        let supplyArray = [];\r\n\r\n        tradeCodes.forEach(code => {\r\n            let codeConst = TRADECODES[code];\r\n            let newGoods = codeConst.tradeGoods.supply;\r\n            supplies.push(...newGoods);\r\n   \r\n        supplies.forEach(good => {\r\n            let tradeGood = this.getGoodsDetails(good);\r\n            let supplyAmount;\r\n            if (codeConst.modifier.supplyEffect.includes(tradeGood.goodsClass)){\r\n                supplyAmount = 10 * codeConst.modifier.strength * (pop * pop)}\r\n            else{ supplyAmount = 1 * (pop * pop)}\r\n            tradeGood.supplyAmount = supplyAmount;\r\n            supplyArray.push({id : tradeGood.id, good : tradeGood.goodsName, basePrice : tradeGood.basePrice, supplyAmount : tradeGood.supplyAmount, foundDemand : 0});\r\n\r\n        })\r\n    })  \r\n        return supplyArray;\r\n    }\r\n    //Not working -?\r\n    setDemand(pop, tradeCodes){\r\n        let demands = [];\r\n        let demandsArray = [];\r\n\r\n        tradeCodes.forEach(code => {\r\n            let codeConst = TRADECODES[code];\r\n            let newGoods = codeConst.tradeGoods.demand;\r\n            demands.push(...newGoods);    \r\n\r\n        demands.forEach(good => {\r\n            let tradeGood = this.getGoodsDetails(good);\r\n            let demandAmount;\r\n            if (codeConst.modifier.demandEffect.includes(tradeGood.goodsClass)){\r\n                demandAmount = 10 * codeConst.modifier.strength * (pop * pop)}\r\n            else{ demandAmount = 1 * (pop * pop)}\r\n            tradeGood.demandAmount = demandAmount;\r\n            demandsArray.push({id : tradeGood.id, good : tradeGood.goodsName, basePrice : tradeGood.basePrice, demandAmount : tradeGood.demandAmount, foundSupply : 0});\r\n        })\r\n    })\r\n    return demandsArray\r\n    }\r\n    getGoodsDetails(goodID){\r\n        let selectedGood = TRADEGOODS.find(({ id }) => id === goodID);\r\n        return selectedGood;\r\n    }\r\n    setInitialPricing(tradeInfo){\r\n        let updatedSupply = this.updateSupply(tradeInfo.supply);\r\n        let updatedDemand = this.updateDemand(tradeInfo.demand);\r\n\r\n        tradeInfo.supply = updatedSupply;\r\n        tradeInfo.demand = updatedDemand;\r\n\r\n        return tradeInfo;\r\n    }\r\n\r\n    updateSupply(supply){\r\n        supply.forEach((good) =>{\r\n            good.price = good.basePrice;\r\n            //good.price = good.price.toPrecision(4);\r\n        })\r\n        return supply;\r\n    }\r\n    updateDemand(demand){\r\n        demand.forEach((good) =>{\r\n            good.price = good.basePrice;\r\n            //good.price = good.price.toPrecision(4);\r\n        });\r\n       return demand;\r\n    }\r\n    setTradeRange(tech, tradeCodes){\r\n        let tradeRange = 2;\r\n\r\n        if (tradeCodes.includes(\"Ba\")){ tradeRange = 0 };\r\n        if (tradeCodes.includes(\"Po\")){ tradeRange = 1 };\r\n        if (tradeCodes.includes(\"Ri\")){ tradeRange = 3 };\r\n\r\n        //Poss include trade range as a factor\r\n        return tradeRange;\r\n    }\r\n    //findTradeRoutes(hexKey, distance);\r\n    findTradeRoutes(startKey){\r\n        const sectorMap = getSectorData();\r\n        const originSystem = sectorMap.SectorMap.get(startKey);\r\n        const originDemands = originSystem.system.economicData.tradeInfo.demand;\r\n        const originSupply = originSystem.system.economicData.tradeInfo.supply;\r\n\r\n        let edgesArray = originSystem.edges;\r\n        let startSystem = originSystem;\r\n        let visitedSystems = [startKey];\r\n        //Starts the journey at 1 hex distance\r\n        for(let distance = 0; distance < originSystem.system.economicData.tradeRange; distance ++){\r\n            edgesArray.forEach((edgeKey, edgeIndex) => {\r\n                let edge = sectorMap.SectorMap.get(edgeKey);\r\n                if(edge.system && !(edge.system.systemData.tradeCodes.includes(\"Ba\"))){\r\n                    let edgeDemands = edge.system.economicData.tradeInfo.demand;\r\n                    let edgeSupply = edge.system.economicData.tradeInfo.supply;\r\n\r\n                    let selling = [];\r\n                    let buying = [];\r\n\r\n                    visitedSystems.push(edgeKey);\r\n\r\n                    //Compare originDemands to edgeSupply\r\n                    originDemands.forEach((demand) => {\r\n                        let match = edgeSupply.find((supply) => supply.id == demand.id);\r\n                        if(match){\r\n                            buying.push(match.id);\r\n                        }})\r\n\r\n                    //Comapre originSupply to edgeDemands        \r\n                    originSupply.forEach((supply) => {\r\n                        let match = edgeDemands.find((demand) => demand.id == supply.id);\r\n                        if(match){\r\n                            selling.push(match.id);\r\n                        }\r\n                    })\r\n                    if(selling.length > 0 || buying.length > 0){\r\n                        let tradeData = {sellingIdArray : selling, buyingIdArray : buying};\r\n                        let newRoute = new TradeRoute(startSystem, edge, tradeData);\r\n                        originSystem.system.economicData.tradeRoutes.set(newRoute.routeKey, newRoute)\r\n                    }\r\n                //Get more edges\r\n                    let newEdgesArray = edge.edges;\r\n                    newEdgesArray.forEach((edge, index, array) =>{\r\n                        let newEdgeHex = sectorMap.SectorMap.get(edge);\r\n                        if(newEdgeHex.system == null){\r\n                            (array.splice(index , 1));\r\n                        }\r\n                        if(edgesArray.includes(edge)){\r\n                            (array.splice(index , 1));\r\n                        }\r\n                        if(visitedSystems.includes(edge)){\r\n                            (array.splice(index , 1));\r\n                        }\r\n                    });\r\n                    edgesArray.splice(edgeIndex, 1)\r\n                    edgesArray.push(...newEdgesArray);\r\n                }\r\n            });\r\n        }    \r\n    }\r\n}","//Change TradeCodes to array?\r\n//Supply Demand Rework\r\n//Supply\r\n//In - 7-8, 9-F\r\n//Ag - 4, 8 - 5-7\r\nexport const TRADECODES = { \r\n    \"Template\" : { \r\n        codeName : \"Name\",\r\n        //Poss replace with supplies and demands\r\n        tradeGoods : {supply : [], demand : []},\r\n        modifier : {strength : 1, supplyEffect : [], demandEffect : []},\r\n        codeClass : \"\"\r\n    },\r\n    \"As\" : { \r\n        codeName : \"Asteroid Belt\",\r\n        tradeGoods : {supply : [31, 42, 44, 45, 53], demand : [15, 21, 22, 25, 32]},\r\n        modifier : {strength : 2, supplyEffect : [\"Mining\"], demandEffect : []},\r\n        codeClass : \"Planetary\"\r\n    },\r\n    \"De\" : { \r\n        codeName : \"Desert\",\r\n        tradeGoods : {supply : [31, 41, 42, 44, 45, 51, 54], demand : []},\r\n        modifier : {strength : 1, supplyEffect : [\"Resource\", \"Mining\"], demandEffect : []},\r\n        codeClass : \"Planetary\"\r\n    },\r\n    \"Fl\" : { \r\n        codeName : \"Fluid Oceans\",\r\n        tradeGoods : {supply : [41, 44], demand : [15]},\r\n        modifier : {strength : 0.5, supplyEffect : [\"Resource\"], demandEffect : []},\r\n        codeClass : \"Planetary\"\r\n    },\r\n    \"Ga\" : { \r\n        codeName : \"Garden\",\r\n        tradeGoods : {supply : [33, 34, 51, 55], demand : []},\r\n        modifier : {strength : 2, supplyEffect : [\"Resource\"], demandEffect : []},\r\n        codeClass : \"Planetary\"\r\n    },\r\n    \"He\" : { \r\n        codeName : \"Hell-World\",\r\n        tradeGoods : {supply : [], demand : []},\r\n        modifier : {strength : 1, supplyEffect : [], demandEffect : []},\r\n        codeClass : \"Planetary\",\r\n    },\r\n    \"Ic\" : { \r\n        codeName : \"Ice-Capped\",\r\n        tradeGoods : {supply : [31, 41, 44, 53], demand : [15, 32]},\r\n        modifier : {strength : 1, supplyEffect : [\"Resource\"], demandEffect : []},\r\n        codeClass : \"Planetary\"\r\n    },\r\n    \"Oc\" : { \r\n        codeName : \"Ocean World\",\r\n        tradeGoods : {supply : [26, 35, 41, 42, 51, 54], demand : []},   \r\n        modifier : {strength : 0.5, supplyEffect : [\"Resource\"], demandEffect : []},\r\n        codeClass : \"Planetary\"\r\n    },\r\n    \"Va\" : { \r\n        codeName : \"Vacuum\",\r\n        tradeGoods : {supply : [], demand : []},\r\n        modifier : {strength : 1, supplyEffect : [], demandEffect : []},\r\n        codeClass : \"Planetary\"\r\n    },\r\n    \"Wa\" : { \r\n        codeName : \"Water World\",\r\n        tradeGoods : {supply : [26, 35, 41, 42, 51, 54], demand : []},\r\n        modifier : {strength : 1, supplyEffect : [\"Resource\"], demandEffect : []},\r\n        codeClass : \"Planetary\"\r\n    },\r\n    \"Di\" : { \r\n        codeName : \"Die-Back\",\r\n        tradeGoods : {supply : [], demand : []},\r\n        modifier : {strength : 1, supplyEffect : [], demandEffect : []},\r\n        codeClass : \"Population\"\r\n    },\r\n    \"Ba\" : { \r\n        codeName : \"Barren\",\r\n        tradeGoods : {supply : [], demand : []},\r\n        modifier : {strength : 1, supplyEffect : [], demandEffect : []},\r\n        codeClass : \"Population\"\r\n    },\r\n    \"Lo\" : { \r\n        codeName : \"Low Population\",\r\n        tradeGoods : {supply : [11, 12, 13, 14, 15, 16, 45], demand : [33]},\r\n        modifier : {strength : 1, supplyEffect : [], demandEffect : []},\r\n        codeClass : \"Population\",\r\n    },\r\n    \"Ni\" : { \r\n        codeName : \"Non-Industrial\",\r\n        tradeGoods : {supply : [11, 12, 13, 14, 15, 16, 52], demand : [11, 12, 16, 21, 22, 43, 53, 56]},\r\n        modifier : {strength : 1, supplyEffect : [], demandEffect : [\"Consumables\", \"Industrial\"]},\r\n        codeClass : \"Population\"\r\n    },\r\n    \"Ph\" : { \r\n        codeName : \"Pre-High Population\",\r\n        tradeGoods : {supply : [11, 12, 13, 14, 15, 16, 35, 36, 42], demand : [13, 15, 23, 34, 51, 52, 56]},\r\n        modifier : {strength : 0.5, supplyEffect : [], demandEffect : [\"Consumables\", \"Industrial\"]},\r\n        codeClass : \"Population\"\r\n    },\r\n    \"Hi\" : { \r\n        codeName : \"High Population\",\r\n        tradeGoods : {supply : [11, 12, 13, 14, 15, 16, 35, 36, 42], demand : [13, 15, 23, 34, 51, 52, 56]},\r\n        modifier : {strength : 1, supplyEffect : [], demandEffect : [\"Consumables\", \"Industrial\"]},\r\n        codeClass : \"Population\"\r\n    },\r\n    \"Pa\" : { \r\n        codeName : \"Pre-Agricultural\",\r\n        tradeGoods : {supply : [26, 33, 34, 52, 54, 55], demand : [12, 41, 46]},\r\n        modifier : {strength : 0.5, supplyEffect : [\"Organic\"], demandEffect : [\"Industrial\"]},\r\n        codeClass : \"Output\"\r\n    },\r\n    \"Ag\" : { \r\n        codeName : \"Agricultural\",\r\n        tradeGoods : {supply : [26, 33, 34, 52, 54, 55], demand : [12, 41, 46]},\r\n        modifier : {strength : 1, supplyEffect : [\"Organic\"], demandEffect : [\"Industrial\"]},\r\n        codeClass : \"Output\"\r\n    },\r\n    \"Na\" : { \r\n        codeName : \"Non-Agricultural\",\r\n        tradeGoods : {supply : [], demand : [52]},\r\n        modifier : {strength : 1, supplyEffect : [], demandEffect : [\"Consumables\"]},\r\n        codeClass : \"Economic\"\r\n    },\r\n    \"Pi\" : { \r\n        codeName : \"Pre-Industrial\",\r\n        tradeGoods : {supply : [21, 22, 23, 24, 25, 43, 46, 56], demand : [14, 16, 26, 31, 36, 44, 45, 53, 54]},\r\n        modifier : {strength : 0.5, supplyEffect : [\"Industrial\"], demandEffect : [\"Resource\", \"Mining\"]},\r\n        codeClass : \"Output\"\r\n    },\r\n    \"In\" : { \r\n        codeName : \"Industrial\",\r\n        tradeGoods : {supply : [21, 22, 23, 24, 25, 43, 46, 56], demand : [14, 16, 26, 31, 36, 44, 45, 53, 54]},\r\n        modifier : {strength : 1, supplyEffect : [\"Industrial\"], demandEffect : [\"Resource\", \"Mining\"]},\r\n        codeClass : \"Output\"\r\n    },\r\n    \"Po\" : { \r\n        codeName : \"Poor\",\r\n        tradeGoods : {supply : [11], demand : [11, 14, 24, 36, 51]},\r\n        modifier : {strength : 1, supplyEffect : [], demandEffect : []},\r\n        codeClass : \"Economic\"\r\n    },\r\n    \"Pr\" : { \r\n        codeName : \"Pre-Rich\",\r\n        tradeGoods : {supply : [], demand : [21, 23, 25, 31, 32, 35, 36, 42, 43, 44, 51, 55]},\r\n        modifier : {strength : 1, supplyEffect : [], demandEffect : []},\r\n        codeClass : \"Economic\"\r\n    },\r\n    \"Ri\" : { \r\n        codeName : \"Rich\",\r\n        tradeGoods : {supply : [], demand : [21, 23, 25, 31, 32, 35, 36, 42, 43, 44, 51, 55]},\r\n        modifier : {strength : 1, supplyEffect : [], demandEffect : []},\r\n        codeClass : \"Economic\"\r\n    }\r\n}\r\n//Supply Output = Pop * *(0.5 if poor, 2 if Rich, 1.5 if Pre-Rich)\r\n//Demand = \r\n// Classes = Basic/Advanced Industrial, Basic/Advanced Resource, Basic/Advanced Organic, Luxury, Basic/Advanced Comsumables\r\n\r\nexport const TRADEGOODS = [\r\n    {id : 11, goodsName : \"Basic Electronics\",              goodsClass : \"Industrial\",   basePrice : 10},\r\n    {id : 12, goodsName : \"Basic Machine Parts\",            goodsClass : \"Industrial\",   basePrice : 10},\r\n    {id : 13, goodsName : \"Basic Manufactured Goods\",       goodsClass : \"Industrial\",   basePrice : 10},\r\n    {id : 14, goodsName : \"Basic Raw Materials\",            goodsClass : \"Resource\",     basePrice : 5}, \r\n    {id : 15, goodsName : \"Basic Consumables\",              goodsClass : \"Comsumables\",      basePrice : 2},\r\n    {id : 16, goodsName : \"Basic Ore\",                      goodsClass : \"Mining\",              basePrice : 1},\r\n\r\n    {id : 21, goodsName : \"Advanced Electronics\",           goodsClass : \"Industrial\",   basePrice : 100},\r\n    {id : 22, goodsName : \"Advanced Machine Parts\",         goodsClass : \"Industrial\",   basePrice : 75},\r\n    {id : 23, goodsName : \"Advanced Manufactured Goods\",    goodsClass : \"Industrial\",   basePrice : 100},\r\n    {id : 24, goodsName : \"Advanced Weapons\",               goodsClass : \"Industrial\",   basePrice : 150},\r\n    {id : 25, goodsName : \"Advanced Vehicles\",              goodsClass : \"Industrial\",   basePrice : 180},\r\n\r\n    {id : 26, goodsName : \"Biochemicals\",                   goodsClass : \"Resource\",      basePrice : 50},\r\n    {id : 31, goodsName : \"Crystals and Gems\",              goodsClass : \"Mining\",     basePrice : 20},\r\n    {id : 32, goodsName : \"Cybernetics\",                    goodsClass : \"Industial\",   basePrice : 250},\r\n    {id : 33, goodsName : \"Live Animals\",                   goodsClass : \"Resource\",     basePrice : 10},\r\n    {id : 34, goodsName : \"Luxury Consumables\",             goodsClass : \"Consumables\",      basePrice : 20},\r\n    {id : 35, goodsName : \"Luxury Goods\",                   goodsClass : \"Industrial\",   basePrice : 200},\r\n    {id : 36, goodsName : \"Medical Supplies\",               goodsClass : \"Industrial\",   basePrice : 50},\r\n    {id : 41, goodsName : \"Petrochemicals\",                 goodsClass : \"Resource\",     basePrice : 10},\r\n    {id : 42, goodsName : \"Pharmaceuticals\",                goodsClass : \"Industrial\",   basePrice : 100},\r\n    {id : 43, goodsName : \"Polymers\",                       goodsClass : \"Resource\",     basePrice : 7},\r\n    {id : 44, goodsName : \"Precious Metals\",                goodsClass : \"Resource\",     basePrice : 50},\r\n    {id : 45, goodsName : \"Radioactives\",                   goodsClass : \"Resource\",     basePrice : 1000},\r\n    {id : 46, goodsName : \"Robots\",                         goodsClass : \"Industrial\",   basePrice : 400},\r\n    {id : 51, goodsName : \"Spices\",                         goodsClass : \"Comsumables\",      basePrice : 6},\r\n    {id : 52, goodsName : \"Textiles\",                       goodsClass : \"Industrial\",   basePrice : 3},\r\n    {id : 53, goodsName : \"Uncommon Ore\",                   goodsClass : \"Mining\",     basePrice : 5},\r\n    {id : 54, goodsName : \"Uncommon Raw Materials\",         goodsClass : \"Resource\",     basePrice : 20},\r\n    {id : 55, goodsName : \"Wood\",                           goodsClass : \"Resource\",      basePrice : 1},\r\n    {id : 56, goodsName : \"Vehicles\",                       goodsClass : \"Industrial\",   basePrice : 15}\r\n    ];\r\n//Currently not being used - fold into \r\nexport const BASICTRADEGOODS = [11, 12, 13, 14, 15, 16];","import { openTab, generateInfoBox, generateTradeBox, rollDice, oddq_direction_differences } from \"./utilities.js\";\r\nimport { System } from \"./system.js\";\r\n//TRY AND REPLACE ALL USES OF map with SECTOR if Map\r\n//Something deeply cursed is happening in the hex coordinates. I try not to think about it\r\n\r\nexport class Sector{\r\n    constructor(col, row, scale){\r\n        this.col = col;\r\n        this.row = row;\r\n        this.scale = scale;\r\n        this.SectorMap = this.makeSectorMap(this.col, this.row, this.scale);\r\n        this.systemList = this.makeSystemList(this.SectorMap);\r\n    }\r\n\r\n    //Creates \r\n    makeSectorMap(col, row, scale){\r\n        const SectorMap = new Map();\r\n        const TradeMap = new Map();\r\n        let hexContainer = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n        hexContainer.setAttribute(\"id\", \"hex-container\");\r\n        hexContainer.id = \"hex-container\";\r\n        document.getElementById(\"svg-container\").appendChild(hexContainer);\r\n        //Fix width;\r\n        let margin = 3;\r\n        let r = scale\r\n        let svgHeight = ((row + 0.5) * ((Math.sqrt(3) * r))) + (margin*2);\r\n        let svgWidth = ((col + 0.5) * (3/2 * r) + (margin*2));\r\n        document.getElementById(\"hex-container\").setAttribute(\"height\", `${Math.floor(svgHeight)}`);\r\n        document.getElementById(\"hex-container\").setAttribute(\"width\", `${Math.floor(svgWidth)}`);\r\n        \r\n        //Switching order of hex and trade group makes each clickable - implement toggle?\r\n\r\n        let hexGroup = document.createElementNS(\"http://www.w3.org/2000/svg\",\"g\");\r\n        hexGroup.setAttribute(\"id\", \"hex-group\");\r\n        hexContainer.appendChild(hexGroup);\r\n\r\n        let tradeGroup = document.createElementNS(\"http://www.w3.org/2000/svg\",\"g\");\r\n        tradeGroup.setAttribute(\"id\", \"trade-group\");\r\n        hexContainer.appendChild(tradeGroup);\r\n\r\n\r\n\r\n        for(let c = 0; c < col; c++){\r\n            let colNum = c + 1;\r\n            for (let r = 0; r < row; r++){\r\n                let rowNum = r + 1;\r\n                let hex = new Hex(colNum, rowNum, scale);\r\n                SectorMap.set(hex.hexKey, hex);\r\n            }\r\n        }\r\n        SectorMap.forEach((hex)=>{hex.edges = hex.setEdges(this.col, this.row, hex, SectorMap)});\r\n\r\n        return {SectorMap : SectorMap, TradeMap : TradeMap};\r\n    }\r\n    //Merge into above for each\r\n    makeSystemList(Sector){\r\n        let systemList = new Map();\r\n        let listKey = 0;\r\n        Sector.SectorMap.forEach((hex, systemKey) => {\r\n            if(hex.system){\r\n                let tableRow = {localID: systemKey, hex: hex.id, name: hex.system.tableData.Name, uwp: hex.system.tableData.UWP};\r\n                systemList.set(listKey, tableRow);\r\n                listKey ++;\r\n            }\r\n        });\r\n        return systemList;\r\n    }\r\n}\r\n//Bring up to standard - half done\r\nexport class Hex {\r\n    constructor(col, row, hexSize){\r\n        this.col = col;\r\n        this.row = row;\r\n        this.hexKey = [col, row];\r\n        this.hexSize = hexSize;\r\n        this.centerPoint = this.hexCenter();\r\n        this.axialCoord = this.oddqToAxial();\r\n        this.edges;\r\n        this.id = `${this.col - 1}, ${this.row - 1}`;\r\n        this.system = this.setSystem(this.id, this.centerPoint);\r\n        this.init();\r\n    }    \r\n    init(){\r\n        //Create Hex\r\n        this.createHex(this.col,this.row);\r\n    }\r\n    //Returns center point of given col and row values\r\n    hexCenter(){\r\n        let margin = 3;\r\n        let x = this.col * (3/2 * this.hexSize) - (this.hexSize/2) + margin;\r\n        let y = this.row * (Math.sqrt(3) * this.hexSize) - (Math.sqrt(3) * this.hexSize / 2) + margin;\r\n        //2nd Column offset\r\n        if (!(this.col%2)){y += (Math.sqrt(3)/2 * this.hexSize)}\r\n        return {\"x\":x, \"y\":y};\r\n    }\r\n    //Credit to RedBlobGames for 100% of this:\r\n    oddqToAxial(){\r\n            let q = this.col;\r\n            let r = this.row - (this.col - (((this.col%2) === 0?this.col : 0)));\r\n            return {'q':q, 'r':r};\r\n    }\r\n    //Creates hex element\r\n    createHex(){\r\n        let newHex = document.createElementNS(\"http://www.w3.org/2000/svg\", \"polygon\");\r\n        let newHexGroup = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\r\n\r\n        newHex.setAttribute(\"points\", this.hexPoints());\r\n        newHex.setAttribute(\"id\",`${this.id}`);\r\n        newHexGroup.setAttribute(\"class\",\"hex\");\r\n\r\n        //Adds onclick event\r\n        newHexGroup.setAttribute(\"class\",\"hex-group\");\r\n        newHexGroup.addEventListener(\"click\", ()=>{this.hexOnClick(this);});\r\n        \r\n        //Adds the new hex element to container\r\n        newHexGroup.appendChild(newHex);\r\n        document.getElementById(\"hex-group\").appendChild(newHexGroup);\r\n\r\n        if(this.system){\r\n            this.setMarker(newHexGroup);\r\n        }\r\n    }   \r\n    setSystem(id, centerPoint){\r\n        if(rollDice(1)>3){return new System(id, centerPoint)}\r\n        else{return null};\r\n    } \r\n    hexOnClick(hex){\r\n        let info = document.getElementById(\"system-information-content\");\r\n        let trade = document.getElementById(\"system-trade-content\");\r\n        let currentTab = document.getElementsByClassName(\"tab-links active\");\r\n        let currentTabID = currentTab[0].id;\r\n        //Bad - case switch?\r\n        if(currentTabID === \"all-systems\"){currentTab = {target : {id : \"system-information\"}}};\r\n        if(currentTabID === \"system-information\"){currentTab = {target : {id : \"system-information\"}}};\r\n        if(currentTabID === \"system-trade\"){currentTab = {target : {id : \"system-trade\"}}};\r\n\r\n        if(hex.system){\r\n            if(info.hasChildNodes()){info.innerHTML = \"\";}\r\n            if(trade.hasChildNodes()){trade.innerHTML = \"\";}\r\n            generateInfoBox(hex.system.tableData)\r\n            if(hex.system.economicData){generateTradeBox(hex.system.economicData)}\r\n            openTab(currentTab, hex);\r\n        }\r\n    \r\n        document.querySelectorAll(\".clicked-hex\").forEach((hex)=> hex.setAttribute(\"class\", \"hex\"));\r\n        document.getElementById(hex.id).setAttribute(\"class\",\"clicked-hex\");\r\n    }    \r\n    //Gets from hexCenter(), creates points for hex polygon\r\n    hexPoints(){\r\n        this.hexCenter();\r\n        let x = this.centerPoint.x;\r\n        let y = this.centerPoint.y;\r\n        let points = ``;\r\n\r\n        //Create Points list\r\n        for(let i = 0; i<6; i++){\r\n            const angleDeg = 60 * i;\r\n            const angleRad = Math.PI/180 * angleDeg;\r\n            let xPoint = this.hexSize * Math.cos(angleRad);\r\n            let yPoint = this.hexSize * Math.sin(angleRad);\r\n            //Above gives pixel coordinates at a 0,0 point.\r\n            //Now to translate that to correct location.\r\n            xPoint += x;\r\n            yPoint += y;\r\n            points += `${Math.floor(xPoint)}, ${Math.floor(yPoint)} `;\r\n        }\r\n        return points;\r\n    }\r\n    setMarker(newHex){\r\n        //Useful code for creating a dot at the middle of a hex.\r\n        let cx = this.centerPoint.x;\r\n        let cy = this.centerPoint.y;\r\n\r\n        let mark = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\r\n        mark.setAttribute(\"cx\", cx);\r\n        mark.setAttribute(\"cy\", cy);\r\n        mark.setAttribute(\"r\", 10);\r\n        mark.setAttribute(\"id\", \"marker\");\r\n        newHex.appendChild(mark);\r\n    }\r\n    setEdges(col, row, hex, SectorMap){\r\n        let edges = [];\r\n\r\n        let directionArray = oddq_direction_differences[0];\r\n        if(hex.col % 2 != 0){\r\n            directionArray = oddq_direction_differences[1];}          \r\n\r\n        directionArray.forEach((direction) => {\r\n            let edgeCol = hex.col + direction[0];\r\n            let edgeRow = hex.row + direction[1];\r\n            if(edgeCol > 0 && edgeCol <= col && edgeRow > 0 && edgeRow <= row){\r\n                SectorMap.forEach((hex, key)=>{if(hex.col == edgeCol && hex.row == edgeRow){edges.push(key)}})\r\n            }})\r\n        return edges;\r\n    }\r\n}\r\n","import { Sector } from \"./makemap.js\";\r\nimport { openTab, allSystemsTable } from \"./utilities.js\";\r\n\r\nexport function getSectorData(){\r\n    const sectorData = document.getElementById(\"hex-container\").sectorDataContainer;\r\n    const sectorMap = sectorData.sector.SectorMap;\r\n    return sectorMap;\r\n}\r\n\r\nexport function generateMap(e){\r\n    const dataContainer = {};\r\n    let gen = e.target.parentElement;\r\n    //Uses default values:\r\n    let col = gen.col.value;\r\n    let row = gen.row.value;\r\n    let scale = gen.scale.value;\r\n    //Gets user input col and row values or uses default:\r\n    if(!col){col = 8;}\r\n    if(!row){row = 10}\r\n    if(!scale){scale = 40}\r\n    if(document.querySelectorAll(\"#hex-container\").length === 0){\r\n        dataContainer.sector = new Sector(col, row, scale);\r\n    }\r\n    //Creates Tab Display\r\n    document.getElementById(\"tab-display\").style.display = \"block\";\r\n    let tab = document.getElementsByClassName(\"tab-links\");\r\n    for(let t = 0; t < tab.length; t++){\r\n        tab[t].style.display = \"block\";\r\n        tab[t].addEventListener('click', openTab)\r\n    }\r\n    let tabLinks = document.getElementsByClassName(\"tab-links\");\r\n    for (let i = 0; i < tabLinks.length; i++) {\r\n      tabLinks[i].className = tabLinks[i].className.replace(\" active\", \"\");\r\n    }\r\n    document.getElementById(\"all-systems\").className += \" active\";\r\n    allSystemsTable(dataContainer.sector.systemList);\r\n\r\n    document.getElementById(\"content-container\").style.height=`${document.getElementById(\"svg-container\").offsetHeight}px`;\r\n\r\n    document.getElementById(\"run-button\").style.display = \"block\";\r\n    document.getElementById(\"reset-button\").style.display = \"block\";\r\n\r\n    //Hides Map Generator div\r\n    document.getElementById(\"map-generator\").style.display = \"none\";\r\n    document.getElementById(\"hex-container\").sectorDataContainer = dataContainer;\r\n}\r\n\r\n//Resets map\r\nexport function resetMap(){\r\n    //fix CSS on generator section\r\n    document.getElementById(\"map-generator\").style.display = \"inline-flex\";\r\n    document.getElementById(\"run-button\").style.display = \"none\";\r\n    document.getElementById(\"reset-button\").style.display = \"none\";\r\n\r\n    if(document.getElementById(\"system-information-content\") !== null){\r\n        let systemContent = document.getElementById(\"system-information-content\");\r\n        let oldSystem = systemContent.firstElementChild;\r\n        let allContent = document.getElementById(\"all-systems-content\");    \r\n        let oldAll = allContent.firstElementChild;\r\n\r\n        if (oldSystem !== null) systemContent.removeChild(oldSystem);\r\n        if (oldAll !== null) allContent.removeChild(oldAll);\r\n    }\r\n\r\n    if(document.querySelectorAll(\"#hex-container\").length > 0){\r\n        let mapContainer = document.getElementById(\"svg-container\");\r\n        let map = document.getElementById(\"hex-container\");\r\n        mapContainer.removeChild(map);\r\n    }\r\n\r\n    document.getElementById(\"tab-display\").style.display = \"none\";\r\n\r\n    let tabLinks = document.getElementsByClassName(\"tab-links\");\r\n    for(let t = 0; t < tabLinks.length; t++){\r\n        tabLinks[t].style.display = \"none\";\r\n    }\r\n}\r\nexport function runSimulation(){\r\n    const sectorMap = getSectorData();\r\n    const activeHexes = [];\r\n    sectorMap.SectorMap.forEach(checkActiveHex, activeHexes);\r\n    let maxValue = 0;\r\n    //At some point work out how to make this simpler!\r\n    activeHexes.forEach((hexKey) =>{ \r\n        origin = sectorMap.SectorMap.get(hexKey);\r\n\r\n        origin.system.economicData.findTradeRoutes(hexKey);\r\n        origin.system.economicData.tradeRoutes.forEach(\r\n            (route, routeKey) =>{\r\n                route.exchangeGoods();\r\n                sectorMap.TradeMap.set(routeKey, route);\r\n            });\r\n    });\r\n    activeHexes.forEach((hexKey) =>{\r\n        origin = sectorMap.SectorMap.get(hexKey);\r\n        origin.system.economicData.tradeRoutes.forEach((route) =>{\r\n            if(route.tradeRouteVolume > maxValue){maxValue = route.tradeRouteVolume};\r\n        })\r\n    })\r\n    activeHexes.forEach((hexKey) =>{\r\n        origin = sectorMap.SectorMap.get(hexKey);\r\n        origin.system.economicData.tradeRoutes.forEach((route) =>{\r\n            route.drawConnectingLine(maxValue);})\r\n    })\r\n}\r\n\r\nexport function checkActiveHex(value, key){        \r\n    if(value.system){this.push(key)}\r\n}\r\n\r\n\r\n\r\n\r\n","import { Economy } from \"./economy.js\";\r\nimport { TRADECODES } from \"./economyConstants.js\";\r\nimport { SYSTEM, TRADECODEREQS } from \"./systemConstants.js\";\r\nimport { rollDice } from \"./utilities.js\";\r\n\r\nexport class System{\r\n    constructor(id, centerPoint){\r\n        this.id = id;\r\n        this.centerPoint = centerPoint;\r\n        this.systemRolls = this.setSystemRolls();\r\n        this.systemData = {\r\n            systemName : this.generateName(),\r\n            size : this.setSize(this.systemRolls.get('planetSize')),\r\n            atmosphere : this.setAtmosphere(this.systemRolls.get('atmoType')),\r\n            hydrographics : this.setHydrographics(this.systemRolls.get('hydroType'), this.systemRolls.get('planetSize')),\r\n            population : this.setPopulation(this.systemRolls.get('population')),\r\n            government : this.setGovernment(this.systemRolls.get('government')),\r\n            lawLevel : this.setLaw(this.systemRolls.get('lawLevel')),\r\n            techLevel : this.setTL(this.systemRolls.get('tl')),\r\n            starport : this.setStarport(this.systemRolls.get('starport')),\r\n            tradeCodes : this.setTradeCodes(this.systemRolls, TRADECODEREQS)\r\n        }\r\n        this.uwp = this.setUWP(this.systemRolls);\r\n        this.economicData = new Economy(this.systemRolls.get('tl'), this.systemRolls.get('government'), this.systemRolls.get('population'), this.systemData.tradeCodes);\r\n        this.init();\r\n    }\r\n    init(){\r\n        this.tableData();\r\n    }\r\n    setSystemRolls(){\r\n        let systemRolls = new Map([])\r\n        //Planet Size:\r\n        let planetSize = rollDice(2) - 2;\r\n        systemRolls.set('planetSize', planetSize);\r\n    \r\n        //Atmo Type:\r\n        let atmoType = rollDice(2) - 7 + systemRolls.get('planetSize');\r\n        if(atmoType < 0){atmoType = 0}\r\n        systemRolls.set('atmoType', atmoType);\r\n    \r\n        //Hydro Perc:\r\n        let hydroMod = 0;\r\n        let atmo = systemRolls.get('atmoType');\r\n        if(atmo === 0 || atmo === 1 || atmo === 10 || atmo === 11 || atmo === 12){hydroMod = -4;}\r\n        let hydroResult = rollDice(2) - 7 + systemRolls.get('planetSize') + hydroMod;\r\n        hydroResult < 0 ? systemRolls.set('hydroType', 0) : systemRolls.set('hydroType', hydroResult);\r\n    \r\n        //Pop:\r\n        let popRoll = rollDice(2) - 2;\r\n        systemRolls.set('population', popRoll);\r\n    \r\n        //Gov Type:\r\n        let govRoll = rollDice(2) - 7 + systemRolls.get('population');\r\n        let govType = govRoll;\r\n        if(govRoll > 13){govType = 13}\r\n        if(govRoll < 0){govType = 0}\r\n        systemRolls.set('government', govType);\r\n    \r\n        //Law Level:\r\n        let lawRoll = rollDice(2) - 7 + govType;\r\n        if(lawRoll < 0){govRoll = 0; lawRoll = 0};\r\n\r\n        systemRolls.set('lawLevel', lawRoll);\r\n    \r\n        //Starport:\r\n        let starport = rollDice(2);\r\n        systemRolls.set('starport', starport);\r\n    \r\n        //TL:\r\n        let starportDM;\r\n        if(starport >= 11){starportDM = 6}\r\n            else if(starport > 8 && starport < 11){starportDM = 4}\r\n            else if(starport > 6 && starport < 8){starportDM = 2}\r\n            else if(starport > 2 && starport < 7){starportDM = 0}\r\n            else starportDM = -4;\r\n    \r\n        let sizeDM = 0;\r\n        if(planetSize > 1 && planetSize < 5){sizeDM = 1}\r\n            else if (planetSize < 2){sizeDM = 2}\r\n                else sizeDM = 0;\r\n        \r\n        //TEMP\r\n        let atmoDM = 0;\r\n        if(atmoType < 4 || atmoType > 9){atmoDM = 1}\r\n    \r\n        let hydroDM = 0;\r\n        if(hydroResult === 0 || hydroResult === 9){hydroDM = 1}\r\n            else if(hydroResult === 10){hydroDM = 2}\r\n    \r\n        let popDM = 0;\r\n        if((popRoll > 0 && popRoll < 6) || popRoll === 9){popDM = 1}\r\n            else if(popRoll === 10){popDM = 2}\r\n            else if(popRoll === 11){popDM = 3}\r\n            else if(popRoll === 12){popDM = 4}\r\n    \r\n        let govDM = 0;\r\n        if(govType === 0 || govType === 5){govDM = 1}\r\n            else if (govType === 7){govDM = 2}\r\n            else if (govType === 13 || govType === 14){govDM = -2}\r\n    \r\n        let TL = rollDice(1) + starportDM + sizeDM + atmoDM + hydroDM + popDM + govDM;\r\n        if(TL < 0){TL = 0}\r\n        systemRolls.set('tl', TL);\r\n    \r\n        return systemRolls;\r\n    }\r\n\r\n    //Returns formatted system data for table - redundant?\r\n    tableData(){ \r\n        let formattedPop = this.systemData.population.totalPopulation.toLocaleString();\r\n        let tradeCodeLongArray = [];\r\n        let formattedTradeCodes;\r\n        let formatedHydroPercent = `${this.systemData.hydrographics.hydroPercent}%`;\r\n\r\n        this.systemData.tradeCodes.forEach((code) => {\r\n            tradeCodeLongArray.push(TRADECODES[code].codeName)\r\n        })\r\n\r\n        formattedTradeCodes = tradeCodeLongArray.join(\", \")\r\n\r\n        return this.tableData = \r\n                {\"UWP\":`${this.uwp}`,\r\n                \"Name\": this.systemData.systemName,\r\n                \"Size\":`${this.systemData.size.size} km`,\r\n                \"Gravity\":`${this.systemData.size.gravity} Earth Normal`, \r\n                \"Atmosphere\":`${this.systemData.atmosphere.atmo} at ${this.systemData.atmosphere.psi} psi.`, \r\n                \"Hydropgraphics\": formatedHydroPercent, \r\n                \"Population\":formattedPop,\r\n                \"Government\":this.systemData.government.governmentType,\r\n                \"Law Level\": this.systemData.lawLevel.lawLevel,\r\n                \"Starport Grade\": this.systemData.starport,\r\n                \"Tech Level\": this.systemData.techLevel.tl,\r\n                \"Trade Code\": formattedTradeCodes,\r\n                }                \r\n    }\r\n//  Name\r\n    generateName(){\r\n        //Code from internet to make a random string of letters.\r\n        let randString = (length=6) => {return Math.random().toString(20).substr(2, length)};\r\n        let systemName = randString(6);\r\n        return systemName;\r\n    }\r\n//  Size\r\n    setSize(sizeRoll){\r\n        let sizeIndex = sizeRoll;\r\n        return {size : SYSTEM.SIZE[sizeIndex], gravity : SYSTEM.GRAVITY[sizeIndex]};\r\n    }\r\n//  Atmosphere\r\n    setAtmosphere(atmoRoll){\r\n        const psiCalc = (min, max) => {return (Math.floor(Math.random()*(((max*1000)-(min*1000)+1)+(min*1000))))/1000};\r\n        let atmoIndex = atmoRoll;\r\n        let psi = psiCalc(SYSTEM.PSIMIN[atmoIndex], SYSTEM.PSIMAX[atmoIndex]);\r\n        return {atmo : SYSTEM.ATMO[atmoIndex], psi : psi};\r\n    }\r\n//  Hydrographics\r\n    setHydrographics(hydro, size){\r\n        //For dumb reasons, despite producing values over 10, hydro is maxed at 10;\r\n        let hydroIndex = hydro;\r\n        hydro > 10 ? hydro = 10 : hydro; \r\n        const hydroCalc = (min, max) => {return (Math.floor((100*(Math.random()*(((max - min) + 1) + min))))/100);};\r\n        let hydroPercent = hydroCalc(SYSTEM.HYDROMIN[hydroIndex], SYSTEM.HYDROMAX[hydroIndex]);\r\n        let hydroDesc = hydro;\r\n        if(size <= 1){\r\n                hydroPercent = 0; \r\n                hydroDesc = 11;\r\n            }\r\n        return {hydroPercent : hydroPercent, hydroDesc : SYSTEM.HYDRO[hydroIndex]};\r\n    }\r\n//  Population\r\n    setPopulation(pop){\r\n        //Numbers are a bit fudged, but who cares.\r\n        let popRoll = pop;\r\n        let totalPop = Math.pow(10, popRoll) + (Math.floor(Math.random()*Math.pow(10, popRoll))) - 1; \r\n        return {totalPopulation : totalPop};\r\n    }\r\n//  Government\r\n    setGovernment(govRoll){\r\n        let govIndex = govRoll;\r\n        return {governmentType : SYSTEM.GOV[govIndex]}\r\n    }\r\n//  Laws\r\n    setLaw(lawRoll){\r\n        let law = lawRoll\r\n        if (law > 9){law = 9};\r\n        if(law < 0){law = 0};\r\n        return {lawLevel : law};\r\n    }\r\n//  Starports\r\n    setStarport(stClass){\r\n        let starport;\r\n        if(stClass > 10){starport  = \"A\"}\r\n            else if(stClass === 10 || stClass === 9){starport = \"B\"}\r\n            else if(stClass === 8 || stClass === 7){starport = \"C\"}\r\n            else if(stClass === 6 || stClass === 5){starport = \"D\"}\r\n            else if(stClass === 4 || stClass === 3){starport = \"E\"}\r\n            else starport = \"X\";\r\n        return starport;\r\n    }\r\n//  Tech Level\r\n    setTL(techRoll){\r\n        return {tl : techRoll}\r\n    }\r\n// Trade Codes\r\n    setTradeCodes(rolls, reqArray){\r\n        let tradeCodesArray = [];\r\n        \r\n        let size = rolls.get('planetSize');\r\n        let atmo = rolls.get('atmoType');\r\n        let hydro = rolls.get('hydroType');\r\n        let pop = rolls.get('population');\r\n        let gov = rolls.get('government');\r\n        let law = rolls.get('lawLevel');\r\n\r\n        reqArray.forEach((req) => {\r\n            let checkArray = [];                \r\n            if(req.siz.length === 0 || req.siz.includes(size)){checkArray.push(true)} else {checkArray.push(false)}\r\n            if(req.atm.length === 0 || req.atm.includes(atmo)){checkArray.push(true)} else {checkArray.push(false)}\r\n            if(req.hyd.length === 0 || req.hyd.includes(hydro)){checkArray.push(true)} else {checkArray.push(false)}\r\n            if(req.pop.length === 0 || req.pop.includes(pop)){checkArray.push(true)} else {checkArray.push(false)}\r\n            if(req.gov.length === 0 || req.gov.includes(gov)){checkArray.push(true)} else {checkArray.push(false)}\r\n            if(req.law.length === 0 || req.law.includes(law)){checkArray.push(true)} else {checkArray.push(false)}\r\n\r\n            if(checkArray.includes(false)){return} else {tradeCodesArray.push(req.code)}\r\n        })\r\n\r\n        return tradeCodesArray;\r\n    }\r\n//  Creates Universal World Profile\r\n    setUWP(rolls){\r\n        let uwp = `${this.systemData.starport}-`+`${(this.numToHex(rolls.get('planetSize')))}`+\r\n        `${(this.numToHex(rolls.get('atmoType')))}`+`${this.numToHex(rolls.get('hydroType'))}`+\r\n        `${this.numToHex(rolls.get('population'))}`+`${this.numToHex(rolls.get('government'))}`+\r\n        `${this.numToHex(rolls.get('lawLevel'))}`+`${this.numToHex(rolls.get('tl'))}`;\r\n        return uwp;\r\n    }\r\n    numToHex(num){\r\n        let code = num.toString(16);\r\n        code = code.toUpperCase();\r\n        return code;\r\n    }\r\n}","export const SYSTEM = {\r\n    SIZE : [800, 1600, 3200, 4800, 6400, 8000, 9600, 11200, 12800, 14400, 16000],\r\n    GRAVITY : [\"Negligible\", 0.05, 0.15, 0.25, 0.35, 0.45, 0.7, 0.9, 1.0, 1.25, 1.4],\r\n    ATMO :[\"None\", \"Trace\", \"Very Thin, Tainted\", \"Very Thin\", \"Thin, Tainted\", \"Thin\", \"Standard\", \r\n    \"Standard, Tainted\",\"Dense\", \"Dense, Tainted\", \"Exotic\", \"Corrosive\", \"Insidious\", \r\n    \"Dense, High\", \"Thin, Low\", \"Unusual\"],\r\n    PSIMIN : [0, 0.001, 0.1, 0.1, 0.43, 0.43, 0.71, 0.71, 1.5, 1.5, 0.43, 0.43, 0.43, 1.5, 0.1, 0],\r\n    PSIMAX : [0, 0.09, 0.42, 0.42, 0.7, 0.7, 1.49, 1.49, 2.49, 2.49, 2.49, 2.49, 2.49, 5, 0.5, 5],\r\n    HYDROMIN : [0, 6, 16, 26, 36, 46, 56, 66, 76, 86, 96],\r\n    HYDROMAX :[5, 15, 25, 35, 45, 55, 65, 75, 85, 95, 100],\r\n    HYDRO : [\"Desert World\", \"Dry World\", \"A few small seas\", \"Small seas and oceans\", \"Wet World\", \"Large oceans\",\r\n    \"\", \"Terran Standard\", \"Water world\", \"Only a few small islands and archipelagos\",\r\n    \"Almost entirely water\", \"None\"],\r\n    GOV : [ \"None\",\"Company/Corporation\",\"Participating Democracy\",\"Self-Perpetuating Oligarchy\",\r\n    \"Representative Democracy\",\"Feudal Technocracy\",\"Captive Government\",\"Balkanisation\",\r\n    \"Civil Service Bureaucracy\",\"Impersonal Bureaucracy\",\"Charismatic Dictator\",\r\n    \"Non-Charistmatic Dictator\",\"Charismatic Oligarchy\",\"Religious Dictatorship\"]\r\n}\r\n\r\nexport const TRADECODEREQS =[\r\n    {code : \"As\", siz :[0], atm : [0], hyd :[0], pop :[], gov : [], law : []},\r\n    {code : \"De\", siz :[], atm : [2, 3, 4, 5, 6, 7, 8, 9], hyd :[0], pop :[], gov : [], law : []},\r\n    {code : \"Fl\", siz :[], atm : [10, 11, 12], hyd :[1, 2, 3, 4, 5, 6, 7, 8, 9, 10], pop :[], gov : [], law : []},\r\n    {code : \"Ga\", siz :[6, 7, 8], atm : [5, 6, 8], hyd :[5, 6, 7], pop :[], gov : [], law : []},\r\n    //Hellworld seems disconnected from other tags, remove?\r\n    {code : \"He\", siz :[3, 4, 5, 6, 7, 8, 9, 10, 11, 12], atm : [2, 3, 7, 8, 10, 11, 12], hyd :[0, 1, 2], pop :[], gov : [], law : []},\r\n    {code : \"Ic\", siz :[], atm : [0, 1], hyd :[1, 2, 3, 4, 5, 6, 7, 8, 9, 10], pop :[], gov : [], law : []},\r\n    {code : \"Oc\", siz :[10, 11, 12], atm : [3, 4, 5, 6, 7, 8, 9, 10, 11, 12], hyd :[10], pop :[], gov : [], law : []},\r\n    {code : \"Va\", siz :[], atm : [0], hyd :[], pop :[], gov : [], law : []},\r\n    {code : \"Wa\", siz :[3, 4, 5, 6, 7, 8, 9, 10], atm : [3, 4, 5, 6, 7, 8, 9, 10, 11, 12], hyd :[10], pop :[], gov : [], law : []},\r\n    \r\n    {code : \"Ba\", siz :[], atm : [], hyd :[], pop :[0], gov : [], law : []},\r\n    {code : \"Lo\", siz :[], atm : [], hyd :[], pop :[1, 2, 3], gov : [], law : []},\r\n    {code : \"Ni\", siz :[], atm : [], hyd :[], pop :[4, 5, 6], gov : [], law : []},\r\n    {code : \"Ph\", siz :[], atm : [], hyd :[], pop :[7, 8], gov : [], law : []},\r\n    {code : \"Hi\", siz :[], atm : [], hyd :[], pop :[9, 10, 11, 12, 13, 14, 15], gov : [], law : []},\r\n    \r\n    {code : \"Pa\", siz :[], atm : [4, 5, 6, 7, 8, 9], hyd :[4, 5, 6, 7, 8], pop :[4, 8], gov : [], law : []},\r\n    {code : \"Ag\", siz :[], atm : [4, 5, 6, 7, 8, 9], hyd :[4, 5, 6, 7, 8], pop :[5, 6, 7], gov : [], law : []},\r\n    {code : \"Na\", siz :[], atm : [0, 1, 2, 3], hyd :[], pop :[6, 7, 8, 9, 10, 11, 12, 13, 14, 15], gov : [], law : []},\r\n    {code : \"Pi\", siz :[], atm : [0, 1, 2, 4, 7, 9], hyd :[], pop :[7, 8], gov : [], law : []},\r\n    {code : \"In\", siz :[], atm : [0, 1, 2, 3, 7, 9, 10, 11, 12], hyd :[], pop :[9, 10, 11, 12, 13, 14, 15], gov : [], law : []},\r\n    {code : \"Po\", siz :[], atm : [2, 3, 4, 5], hyd :[0, 1, 2, 3], pop :[], gov : [], law : []},\r\n    {code : \"Pr\", siz :[], atm : [6, 8], hyd :[], pop :[5, 9], gov : [], law : []},\r\n    {code : \"Ri\", siz :[], atm : [6, 8], hyd :[], pop :[6, 7, 8], gov : [], law : []}\r\n]","export class TradeRoute{\r\n    constructor(startHex, endHex, tradeData){\r\n        this.startId = startHex.id;\r\n        this.endId = endHex.id;\r\n        this.startCenterPoint = startHex.centerPoint;\r\n        this.endCenterPoint = endHex.centerPoint;\r\n        this.routeKey = this.startId + \" <=> \" + this.endId;\r\n\r\n        this.startTradeInfo = startHex.system.economicData.tradeInfo;\r\n        this.endTradeInfo = endHex.system.economicData.tradeInfo;\r\n\r\n        this.startTradeData = tradeData;\r\n\r\n        this.routeTradeCapacity = this.setHighestTradeCapacity(startHex.system.economicData.tradeCapacity, endHex.system.economicData.tradeCapacity)\r\n        this.tradeRouteVolume = 0\r\n        this.tradeRouteProfit = 0;\r\n        this.tradeRouteDetails = []; \r\n    }\r\n    setHighestTradeCapacity(startCapacity, endCapacity){\r\n        if(startCapacity >= endCapacity){\r\n            return startCapacity;\r\n        }\r\n        else return endCapacity;\r\n    }\r\n\r\n    exchangeGoods(){\r\n        this.startTradeData.sellingIdArray.forEach((id) =>{\r\n            let sellGood = this.startTradeInfo.supply.find((good) => good.id == id);\r\n            let buyGood = this.endTradeInfo.demand.find((good) => good.id == id);\r\n            let type = `sell`\r\n            if(sellGood != undefined && buyGood != undefined){this.calculateSale(id, sellGood, buyGood, type);}\r\n        });\r\n        this.startTradeData.buyingIdArray.forEach((id) =>{\r\n            let buyGood = this.startTradeInfo.demand.find((good) => good.id == id);\r\n            let sellGood = this.endTradeInfo.supply.find((good) => good.id == id);\r\n            let type = `buy`\r\n            if(sellGood && buyGood){this.calculateSale(id, sellGood, buyGood, type);}\r\n        });\r\n    }\r\n\r\n    calculateSale(id, sellGood, buyGood, type){\r\n            //This is where dynamic pricing would go - IF I HAD ANY\r\n        let maxSellOffer = sellGood.supplyAmount;\r\n        let maxBuyOffer = buyGood.demandAmount;\r\n        let tradeCapacity = this.routeTradeCapacity;\r\n\r\n        let exchangeArray = [maxSellOffer, maxBuyOffer, tradeCapacity]\r\n        let offerAmount = Math.min(...exchangeArray);\r\n\r\n        let sellPrice = buyGood.price\r\n        let profit = buyGood.price - sellGood.price;\r\n\r\n        //THIS IS WHERE YOU CAN ABORT THE SALE\r\n        //TEMP VALUE\r\n        let sale = true;\r\n\r\n        if(sale = true){\r\n            maxSellOffer -= offerAmount;\r\n            maxBuyOffer -= offerAmount;\r\n\r\n            this.tradeRouteVolume += offerAmount;\r\n            this.tradeRouteProfit += profit;\r\n            this.tradeRouteDetails.push({exchangeType : type, goodId : id, offerAmount : offerAmount, sellPrice : sellPrice, profit : profit}) \r\n        }\r\n    }\r\n    drawConnectingLine(maxValue){\r\n        const startCenterPoint = this.startCenterPoint; \r\n        const endCenterPoint = this.endCenterPoint; \r\n        const width = this.calculateTradeRouteWidth(this.tradeRouteVolume, maxValue);\r\n        const routeKey = this.routeKey;\r\n        const tradeGroup = document.getElementById(\"trade-group\");\r\n\r\n        let newLine = document.createElementNS(\"http://www.w3.org/2000/svg\", \"line\");\r\n    \r\n        newLine.setAttribute(\"x1\", `${startCenterPoint.x}` );\r\n        newLine.setAttribute(\"y1\",`${startCenterPoint.y}`);\r\n        newLine.setAttribute(\"x2\", `${endCenterPoint.x}` );\r\n        newLine.setAttribute(\"y2\",`${endCenterPoint.y}`);\r\n        newLine.setAttribute(\"class\",\"tradeLine\");\r\n        newLine.setAttribute(\"id\", routeKey);\r\n        newLine.setAttribute(\"style\", `stroke:red; stroke-width: ${width}`);\r\n        \r\n        newLine.addEventListener(\"click\", this.tradeRouteOnClick);\r\n\r\n        tradeGroup.appendChild(newLine);\r\n    }\r\n    calculateTradeRouteWidth(routeValue, maxValue){\r\n        let maxWidth = 20\r\n        let width;\r\n        //Oh god, basic maths\r\n        let min = maxValue / 100;\r\n        let widthPercent = routeValue / (min*100);\r\n        console.log(widthPercent);//Working\r\n        width = Math.tanh(widthPercent) *20;\r\n        if(width < 4){ width = 4};\r\n\r\n        return width;\r\n    }\r\n    tradeRouteOnClick(){\r\n        const SectorTradeRoutes = document.getElementById(\"hex-container\").sectorDataContainer.sector.SectorMap.TradeMap;\r\n        console.log(this.id);\r\n        let clickedRoute = SectorTradeRoutes.get(this.id);\r\n        console.log(clickedRoute);\r\n    }\r\n}","import { TRADEGOODS } from \"./economyConstants.js\";\r\n//Something odd happened in the hex code, I've switched these round and it seems to work.\r\nexport const oddq_direction_differences = [\r\n    // odd cols \r\n  [[1, 1], [+1,  0], [ 0, -1], [-1,  0], [-1, 1], [ 0, 1]],\r\n  // even cols \r\n  [[1,  0], [1, -1], [ 0, -1], [-1, -1], [-1,  0], [ 0, 1]]\r\n]\r\n\r\nexport function rollDice(numDice){\r\n  let total = 0;\r\n  for (let i=0; i < numDice; i++){\r\n      total += Math.floor(Math.random() * 6 + 1);\r\n  }\r\n  return total\r\n}\r\n//Tab Control Code\r\n//Currently only works for System Information\r\nexport function openTab(event) {\r\n  // Declare all variables\r\n  let i, tabContent, tabLinks;\r\n  // Get all elements with class=\"\" and hide them\r\n  tabContent = document.getElementsByClassName(\"tab-content\");\r\n  for (i = 0; i < tabContent.length; i++) {\r\n    tabContent[i].style.display = \"none\";\r\n  }\r\n  // Get all elements with class=\"tabLinks\" and remove the class \"active\"\r\n  tabLinks = document.getElementsByClassName(\"tab-links\");\r\n  for (i = 0; i < tabLinks.length; i++) {\r\n    tabLinks[i].className = tabLinks[i].className.replace(\" active\", \"\");\r\n  }\r\n  //Creates tab content if not already created\r\n  // Show the current tab, and add an \"active\" class to the button that opened the tab\r\n  let activeTab = event.target.id;\r\n  let tab = document.getElementById(activeTab);\r\n  tab.className += \" active\";\r\n  if(activeTab != undefined){\r\n  activeTab += \"-content\";\r\n  document.getElementById(activeTab).style.display = \"block\";\r\n  //this might not be working either way\r\n\r\n  }\r\n}\r\n\r\nexport function generateInfoBox(tableData){\r\n  let container = document.getElementById(\"content-container\");\r\n  let infoBox = document.getElementById(\"system-information-content\");\r\n\r\n  if(infoBox === undefined || infoBox === null){\r\n    infoBox = document.createElement(\"div\")\r\n    infoBox.setAttribute(\"id\", \"system-information-content\");\r\n  }\r\n\r\n  //Creates table\r\n  let displayTable = document.createElement(\"table\");\r\n\r\n  displayTable.setAttribute(\"class\", \"info-table\");\r\n\r\n  //Populates rows:\r\n  let labels = [];\r\n  let values = [];\r\n  for(const data in tableData){\r\n      labels.push(data);\r\n      values.push(tableData[data]);\r\n  }\r\n\r\n  for(let i = 0; i < labels.length; i++){\r\n      let row = displayTable.insertRow(i)\r\n      let label = row.insertCell(0);\r\n      let value = row.insertCell(1);\r\n      label.innerHTML = labels[i];\r\n      value.innerHTML = values[i]; \r\n  }\r\n  container.appendChild(infoBox)\r\n  infoBox.appendChild(displayTable);\r\n}\r\n\r\n//hex.system.systemData.economy.tradeData, \"system-trade-table\", \"system-trade\"\r\nexport function generateTradeBox(data){\r\n\r\n  let supply = data.tradeInfo.supply;\r\n  let demand = data.tradeInfo.demand;\r\n  let container = document.getElementById(\"content-container\");\r\n  let tradeBox = document.getElementById(\"system-trade-content\");\r\n\r\n  if(tradeBox === null){\r\n    tradeBox = document.createElement(\"div\")\r\n    tradeBox.setAttribute(\"id\", \"system-trade-content\");\r\n  }\r\n  //Creates table\r\n  let displayTable = document.createElement(\"table\");\r\n  let tblbody = document.createElement(\"tbody\");\r\n  displayTable.setAttribute(\"class\", \"info-table\");\r\n\r\n  //Populates rows:\r\n  let supplyIndex = [];\r\n  let demandIndex = [];\r\n\r\n  let goodsList = TRADEGOODS.map(({ goodsName }) => goodsName);\r\n\r\n  goodsList.forEach((item, index) =>{\r\n    let matchSupply = supply.find(({ good }) => good === item);\r\n    if(matchSupply){supplyIndex.push({index : index, amount : matchSupply.supplyAmount, price : matchSupply.price})}\r\n    let matchDemand = demand.find(({ good }) => good === item);\r\n    if(matchDemand){demandIndex.push({index : index, amount : matchDemand.demandAmount, price : matchDemand.price})}\r\n  });\r\n\r\n  //Create Headings:\r\n  let headingRow = document.createElement(\"tr\");\r\n  let label1Cell = document.createElement(\"td\");\r\n  let label1CellText = document.createTextNode(\"Trade Goods\");\r\n\r\n  let label2Cell = document.createElement(\"td\");\r\n  let label2CellText = document.createTextNode(\"Supply\");\r\n\r\n  let label3Cell = document.createElement(\"td\");\r\n  let label3CellText = document.createTextNode(\"Demand\");\r\n\r\n  label1Cell.appendChild(label1CellText);\r\n  label2Cell.appendChild(label2CellText);\r\n  label3Cell.appendChild(label3CellText);\r\n\r\n  headingRow.appendChild(label1Cell);\r\n  headingRow.appendChild(label2Cell);\r\n  headingRow.appendChild(label3Cell);\r\n\r\n  tblbody.appendChild(headingRow);\r\n\r\n  for (let i = 0; i < goodsList.length; i ++){\r\n    let row = document.createElement(\"tr\");\r\n\r\n    let goodsListCell = document.createElement(\"td\");\r\n    let supplyIndexCell = document.createElement(\"td\");\r\n    let demandIndexCell = document.createElement(\"td\");\r\n    \r\n    let goodsListText = document.createTextNode(goodsList[i]);\r\n\r\n    let supplyItem = supplyIndex.find(({ index }) => index === i);\r\n    let demandItem = demandIndex.find(({ index }) => index === i);\r\n\r\n    let supplyPriceText = document.createTextNode(\"Not available\");\r\n    let demandPriceText = document.createTextNode(\"Not needed\");\r\n\r\n    if(supplyItem){supplyPriceText = document.createTextNode(`${supplyItem.amount} units, at ${supplyItem.price} per unit`)}\r\n    if(demandItem){demandPriceText = document.createTextNode(`${demandItem.amount} units, at ${demandItem.price} per unit`)}\r\n\r\n    goodsListCell.appendChild(goodsListText);\r\n    supplyIndexCell.appendChild(supplyPriceText);\r\n    demandIndexCell.appendChild(demandPriceText);\r\n\r\n    row.appendChild(goodsListCell);\r\n    row.appendChild(supplyIndexCell);\r\n    row.appendChild(demandIndexCell);\r\n\r\n    if(!(supplyPriceText.textContent === \"Not available\" && demandPriceText.textContent === \"Not needed\")){\r\n      tblbody.appendChild(row);\r\n    }\r\n  }\r\n  container.appendChild(tradeBox)\r\n  displayTable.appendChild(tblbody);\r\n  tradeBox.appendChild(displayTable);\r\n}\r\n//Broken right now\r\nexport function allSystemsTable(systemsList){\r\n  let systemsBox = document.getElementById(\"all-systems-content\");\r\n  //Creates table\r\n  let displayTable = document.createElement(\"table\");\r\n\r\n  document.getElementById(\"content-container\").style.height=`${document.getElementById(\"svg-container\").offsetHeight}px`;\r\n \r\n  displayTable.setAttribute(\"class\", \"info-table\");\r\n  systemsBox.appendChild(displayTable);\r\n  //Creates headings - Maybe there's a better way of doing it?\r\n  let headings = displayTable.insertRow(0);\r\n  let headingHex = headings.insertCell(0);\r\n  headingHex.innerHTML = \"Hex\";\r\n  let headingName = headings.insertCell(1);\r\n  headingName.innerHTML = \"Name\";\r\n  let headingUWP = headings.insertCell(2);\r\n  headingUWP.innerHTML = \"UWP\";\r\n\r\n  //Creates rows\r\n  for(let i = 1; i < systemsList.size; i++){\r\n      let listItem = systemsList.get(i);\r\n\r\n      let row = displayTable.insertRow(i);\r\n      let hex = row.insertCell(0);\r\n      let name = row.insertCell(1);\r\n      let uwp = row.insertCell(2);\r\n      \r\n      hex.innerHTML = listItem.hex;\r\n      name.innerHTML = listItem.name;\r\n      uwp.innerHTML = listItem.uwp;\r\n  } \r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/modules/mapCode.js\");\n",""],"names":["TRADECODES","TRADEGOODS","BASICTRADEGOODS","TradeRoute","getSectorData","Economy","constructor","techLevel","government","popRoll","tradeCodes","govtTier","tradeCapacity","setTradeCapacity","tradeInfo","setTradeInfo","tradeBalance","tradeRange","setTradeRange","tradeRoutes","Map","pop","tradeMultiplier","includes","supplyArray","demandArray","forEach","code","codeArray","push","setSupply","setDemand","supply","demand","setInitialPricing","setSystemModifiers","modifiers","supplies","codeConst","newGoods","tradeGoods","good","tradeGood","getGoodsDetails","supplyAmount","modifier","supplyEffect","goodsClass","strength","id","goodsName","basePrice","foundDemand","demands","demandsArray","demandAmount","demandEffect","foundSupply","goodID","selectedGood","find","updatedSupply","updateSupply","updatedDemand","updateDemand","price","tech","findTradeRoutes","startKey","sectorMap","originSystem","SectorMap","get","originDemands","system","economicData","originSupply","edgesArray","edges","startSystem","visitedSystems","distance","edgeKey","edgeIndex","edge","systemData","edgeDemands","edgeSupply","selling","buying","match","length","tradeData","sellingIdArray","buyingIdArray","newRoute","set","routeKey","newEdgesArray","index","array","newEdgeHex","splice","codeName","codeClass","openTab","generateInfoBox","generateTradeBox","rollDice","oddq_direction_differences","System","Sector","col","row","scale","makeSectorMap","systemList","makeSystemList","TradeMap","hexContainer","document","createElementNS","setAttribute","getElementById","appendChild","margin","r","svgHeight","Math","sqrt","svgWidth","floor","hexGroup","tradeGroup","c","colNum","rowNum","hex","Hex","hexKey","setEdges","listKey","systemKey","tableRow","localID","name","tableData","Name","uwp","UWP","hexSize","centerPoint","hexCenter","axialCoord","oddqToAxial","setSystem","init","createHex","x","y","q","newHex","newHexGroup","hexPoints","addEventListener","hexOnClick","setMarker","info","trade","currentTab","getElementsByClassName","currentTabID","target","hasChildNodes","innerHTML","querySelectorAll","points","i","angleDeg","angleRad","PI","xPoint","cos","yPoint","sin","cx","cy","mark","directionArray","direction","edgeCol","edgeRow","key","allSystemsTable","sectorData","sectorDataContainer","sector","generateMap","e","dataContainer","gen","parentElement","value","style","display","tab","t","tabLinks","className","replace","height","offsetHeight","resetMap","systemContent","oldSystem","firstElementChild","allContent","oldAll","removeChild","mapContainer","map","runSimulation","activeHexes","checkActiveHex","maxValue","origin","route","exchangeGoods","tradeRouteVolume","drawConnectingLine","SYSTEM","TRADECODEREQS","systemRolls","setSystemRolls","systemName","generateName","size","setSize","atmosphere","setAtmosphere","hydrographics","setHydrographics","population","setPopulation","setGovernment","lawLevel","setLaw","setTL","starport","setStarport","setTradeCodes","setUWP","planetSize","atmoType","hydroMod","atmo","hydroResult","govRoll","govType","lawRoll","starportDM","sizeDM","atmoDM","hydroDM","popDM","govDM","TL","formattedPop","totalPopulation","toLocaleString","tradeCodeLongArray","formattedTradeCodes","formatedHydroPercent","hydroPercent","join","gravity","psi","governmentType","tl","randString","random","toString","substr","sizeRoll","sizeIndex","SIZE","GRAVITY","atmoRoll","psiCalc","min","max","atmoIndex","PSIMIN","PSIMAX","ATMO","hydro","hydroIndex","hydroCalc","HYDROMIN","HYDROMAX","hydroDesc","HYDRO","totalPop","pow","govIndex","GOV","law","stClass","techRoll","rolls","reqArray","tradeCodesArray","gov","req","checkArray","siz","atm","hyd","numToHex","num","toUpperCase","startHex","endHex","startId","endId","startCenterPoint","endCenterPoint","startTradeInfo","endTradeInfo","startTradeData","routeTradeCapacity","setHighestTradeCapacity","tradeRouteProfit","tradeRouteDetails","startCapacity","endCapacity","sellGood","buyGood","type","undefined","calculateSale","maxSellOffer","maxBuyOffer","exchangeArray","offerAmount","sellPrice","profit","sale","exchangeType","goodId","width","calculateTradeRouteWidth","newLine","tradeRouteOnClick","routeValue","maxWidth","widthPercent","console","log","tanh","SectorTradeRoutes","clickedRoute","numDice","total","event","tabContent","activeTab","container","infoBox","createElement","displayTable","labels","values","data","insertRow","label","insertCell","tradeBox","tblbody","supplyIndex","demandIndex","goodsList","item","matchSupply","amount","matchDemand","headingRow","label1Cell","label1CellText","createTextNode","label2Cell","label2CellText","label3Cell","label3CellText","goodsListCell","supplyIndexCell","demandIndexCell","goodsListText","supplyItem","demandItem","supplyPriceText","demandPriceText","textContent","systemsList","systemsBox","headings","headingHex","headingName","headingUWP","listItem"],"sourceRoot":""}